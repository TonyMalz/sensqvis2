{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\src\\SensQVis.svelte",
    "..\\src\\components\\TabNavigation.svelte",
    "..\\src\\components\\StudyInfo.svelte",
    "..\\src\\components\\UndoRedo.svelte",
    "..\\src\\components\\TabItem.svelte",
    "..\\src\\views\\StudyList.svelte",
    "..\\src\\views\\Userview.svelte",
    "..\\src\\views\\Descriptives.svelte",
    "..\\src\\views\\Customview.svelte",
    "..\\src\\views\\Overview.svelte",
    "..\\src\\components\\StudyCard.svelte",
    "..\\src\\components\\StudyVariables.svelte",
    "..\\src\\components\\StudyUsers.svelte",
    "..\\src\\components\\StudyResponses.svelte",
    "..\\src\\components\\StudyMerger.svelte",
    "..\\src\\components\\VariableStats.svelte",
    "..\\src\\components\\StudyImporter.svelte",
    "..\\src\\charts\\Anova.svelte",
    "..\\src\\charts\\WeekChart.svelte",
    "..\\src\\charts\\BDAChart.svelte",
    "..\\src\\charts\\ContextPie.svelte",
    "..\\src\\charts\\ImageChart.svelte",
    "..\\src\\charts\\MainChart.svelte",
    "..\\src\\charts\\Sherlock.svelte",
    "..\\src\\charts\\VariableQualitativeChart.svelte"
  ],
  "sourcesContent": [
    "<script>\r\n  import TabNavigation from \"./components/TabNavigation.svelte\";\r\n  import TabContent from \"./components/TabContent.svelte\";\r\n  import StudyInfo from \"./components/StudyInfo.svelte\";\r\n  import UndoRedo from \"./components/UndoRedo.svelte\";\r\n</script>\r\n\r\n<style>\r\n  :root {\r\n    --color-header: rgb(255, 255, 255);\r\n    --color-nav: rgb(255, 255, 255);\r\n    --color-content: rgb(255, 255, 255);\r\n    --color-bar: #96bcdb;\r\n  }\r\n\r\n  main {\r\n    overflow-y: auto;\r\n    overflow-x: hidden;\r\n    display: grid;\r\n    width: 100%;\r\n    height: 100%;\r\n    grid-template-areas:\r\n      \"head\"\r\n      \"nav\"\r\n      \"content\";\r\n    grid-template-rows: auto auto 6fr;\r\n  }\r\n\r\n  header {\r\n    padding: 1em;\r\n    padding-left: 1rem;\r\n    font-size: 0.7em;\r\n    font-weight: 300;\r\n    color: rgba(51, 51, 51, 0.6);\r\n    grid-area: head;\r\n    background: var(--color-header);\r\n  }\r\n\r\n  nav {\r\n    /* border-top: 1px solid rgba(255, 62, 0, 0.1); */\r\n    font-weight: 300;\r\n    grid-area: nav;\r\n    background: var(--color-nav);\r\n    display: grid;\r\n    grid-template-areas: \"tabs undoRedo\";\r\n    grid-template-columns: auto 100px;\r\n  }\r\n\r\n  section {\r\n    box-shadow: 1px 0 0 3px #f5f5f5;\r\n    position: relative;\r\n    padding: 1em;\r\n    grid-area: content;\r\n    background: var(--color-content);\r\n  }\r\n\r\n  .tabs {\r\n    grid-area: tabs;\r\n  }\r\n  .undoRedo {\r\n    grid-area: undoRedo;\r\n  }\r\n</style>\r\n\r\n<main>\r\n  <header>\r\n    <StudyInfo />\r\n  </header>\r\n  <nav>\r\n    <div class=\"tabs\">\r\n      <TabNavigation />\r\n    </div>\r\n    <div class=\"undoRedo\">\r\n      <UndoRedo />\r\n    </div>\r\n  </nav>\r\n  <section>\r\n    <TabContent />\r\n  </section>\r\n</main>\r\n",
    "<script>\r\n  import Tabitem from \"./TabItem.svelte\";\r\n  import { fade, fly, slide } from \"svelte/transition\";\r\n  import { flip } from \"svelte/animate\";\r\n  import { tabStore, msgStore, activeTabIdx } from \"../modules/store.js\";\r\n  import { db } from \"../modules/indexeddb.js\";\r\n  import { tick } from \"svelte\";\r\n  import { trunc } from \"../modules/utils\";\r\n\r\n  $: handleMsgs($msgStore.filter(v => v.type === \"navigation\"));\r\n\r\n  function handleMsgs(messages) {\r\n    for (const { action, data: study } of messages) {\r\n      console.log(action, study);\r\n      switch (action) {\r\n        case \"openStudyTabs\":\r\n          //check if tabs for this study already exist\r\n          let studyTabs = $tabStore.filter(v => v.studyId === study._id);\r\n          const studyName = trunc(study.studyName, 25);\r\n          if (studyTabs.length < 1) {\r\n            console.log(\"create new tabs\", studyTabs);\r\n            // tabs don't exist yet create new ones\r\n            const newTabs = [];\r\n            // add home\r\n            newTabs.push($tabStore[0]);\r\n            // show and activate 1st study tab, since it's not already shown\r\n            newTabs.push({\r\n              title: \"Descriptives \" + studyName,\r\n              type: \"descriptives\",\r\n              studyId: study._id,\r\n              id: 1\r\n            });\r\n            newTabs.push({\r\n              title: \"Overview \" + studyName,\r\n              type: \"overview\",\r\n              studyId: study._id,\r\n              id: 2\r\n            });\r\n            newTabs.push({\r\n              title: \"User view \" + studyName,\r\n              type: \"userview\",\r\n              studyId: study._id,\r\n              id: 3\r\n            });\r\n\r\n            let id = 4;\r\n            //add the rest of the tabs\r\n            for (const tab of $tabStore.slice(1)) {\r\n              tab.id = id++;\r\n              newTabs.push(tab);\r\n            }\r\n            $tabStore = newTabs;\r\n            updateTabStore(newTabs);\r\n            // activate newly created second tab\r\n            $activeTabIdx = 1;\r\n          } else if (studyTabs.length == 3) {\r\n            // activate 1st tab of this study\r\n            for (const tab of studyTabs) {\r\n              if (tab.type === \"descriptives\") {\r\n                $activeTabIdx = tab.id;\r\n                return;\r\n              }\r\n            }\r\n          } else {\r\n            //some tabs of this study are open, add missing ones\r\n            const addTabs = [];\r\n            const types = [\"descriptives\", \"overview\", \"userview\"];\r\n            const currentTypes = studyTabs.map(v => v.type);\r\n            const missingTypes = types.filter(\r\n              type => !currentTypes.includes(type)\r\n            );\r\n\r\n            const newTabs = [];\r\n            let id = 0;\r\n            // add current tabs\r\n            for (const currentTab of $tabStore) {\r\n              currentTab.id = id++;\r\n              newTabs.push(currentTab);\r\n            }\r\n            // add missing types\r\n            for (const missingType of missingTypes) {\r\n              switch (missingType) {\r\n                case \"descriptives\":\r\n                  newTabs.push({\r\n                    title: \"Descriptives \" + studyName,\r\n                    type: \"descriptives\",\r\n                    studyId: study._id,\r\n                    id: id++\r\n                  });\r\n                  break;\r\n                case \"overview\":\r\n                  newTabs.push({\r\n                    title: \"Overview \" + studyName,\r\n                    type: \"overview\",\r\n                    studyId: study._id,\r\n                    id: id++\r\n                  });\r\n                  break;\r\n                case \"userview\":\r\n                  newTabs.push({\r\n                    title: \"User view \" + studyName,\r\n                    type: \"userview\",\r\n                    studyId: study._id,\r\n                    id: id++\r\n                  });\r\n                  break;\r\n              }\r\n            }\r\n            $tabStore = newTabs;\r\n            updateTabStore(newTabs);\r\n          }\r\n\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  async function updateTabStore(newTabs) {\r\n    await tick();\r\n    const store = db.transaction(\"UITabs\", \"readwrite\").objectStore(\"UITabs\");\r\n    store.clear();\r\n    for (const tab of newTabs) {\r\n      store.put(tab);\r\n    }\r\n  }\r\n\r\n  function activateTab(tabIdx) {\r\n    // console.log(\"activate \", tabIdx);\r\n    $activeTabIdx = tabIdx;\r\n  }\r\n\r\n  function titleChanged(event) {\r\n    console.log(\"titlechanged\");\r\n    const tab = event.detail;\r\n    db.transaction(\"UITabs\", \"readwrite\")\r\n      .objectStore(\"UITabs\")\r\n      .put(tab);\r\n  }\r\n\r\n  function close(idx, tab) {\r\n    console.log(\"close\", idx, tab);\r\n    if (idx > 0) {\r\n      const reducedTabs = $tabStore.filter(v => v.id !== tab.id);\r\n      let id = 0;\r\n      for (const tab of reducedTabs) {\r\n        tab.id = id++;\r\n      }\r\n\r\n      if ($activeTabIdx > reducedTabs.length - 1) {\r\n        $activeTabIdx = reducedTabs.length - 1;\r\n      }\r\n      $tabStore = reducedTabs;\r\n      updateTabStore(reducedTabs);\r\n    }\r\n  }\r\n\r\n  function addCustomTab() {\r\n    let id = 0;\r\n    // get last id\r\n    for (const tab of $tabStore) {\r\n      id = tab.id;\r\n    }\r\n    const tab = {\r\n      title: \"Custom view \",\r\n      type: \"customview\",\r\n      studyId: null,\r\n      id: ++id\r\n    };\r\n    console.log(\"custom tab\", tab);\r\n    $tabStore.push(tab);\r\n    $tabStore = $tabStore;\r\n    $activeTabIdx = id;\r\n  }\r\n</script>\r\n\r\n<style>\r\n  ul {\r\n    list-style-type: none;\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n  li {\r\n    color: rgba(51, 51, 51, 0.6);\r\n    background: #f5f5f5;\r\n    font-size: 0.9rem;\r\n    display: inline-block;\r\n    box-shadow: inset 0px 2px 0px 1px white;\r\n  }\r\n\r\n  li div {\r\n    cursor: pointer;\r\n    display: inline-block;\r\n    padding: 0.8em 1em;\r\n  }\r\n\r\n  /* Change the link color to #111 (black) on hover */\r\n  li:hover {\r\n    color: inherit;\r\n    /* border-top: 1px solid rgb(255, 175, 160); */\r\n    box-shadow: inset 0px 2px 0px 0px rgb(255, 175, 160);\r\n  }\r\n  .active {\r\n    position: relative;\r\n    color: inherit;\r\n    background: white;\r\n    font-weight: 400;\r\n    /* border-top: 1px solid tomato !important; */\r\n    box-shadow: inset 0px 2px 0px 0px tomato,\r\n      0px 0px 1px 0px rgba(0, 0, 0, 0.25);\r\n  }\r\n  .active::before {\r\n    content: \" \";\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 2px;\r\n    bottom: -3px;\r\n    border: 4px solid white;\r\n    z-index: 1;\r\n  }\r\n  .close:hover {\r\n    background-color: rgba(212, 212, 212, 0.6);\r\n    /* box-shadow: 0 0 1px 0 rgba(0, 0, 0, 0.25); */\r\n  }\r\n</style>\r\n\r\n<ul>\r\n  {#each $tabStore as tab, idx}\r\n    {#if idx !== $activeTabIdx}\r\n      <li on:click={() => activateTab(idx)}>\r\n        <Tabitem {tab} />\r\n        {#if idx !== 0}\r\n          <div\r\n            class=\"close\"\r\n            on:click|stopPropagation|preventDefault={() => close(idx, tab)}>\r\n            x\r\n          </div>\r\n        {/if}\r\n      </li>\r\n    {:else}\r\n      <li class=\"active\">\r\n        <Tabitem {tab} on:notify={titleChanged} />\r\n        {#if idx !== 0}\r\n          <div\r\n            class=\"close\"\r\n            on:click|stopPropagation|preventDefault={() => close(idx, tab)}>\r\n            x\r\n          </div>\r\n        {/if}\r\n      </li>\r\n    {/if}\r\n  {/each}\r\n  <li>\r\n    <div on:click={addCustomTab}>+</div>\r\n  </li>\r\n</ul>\r\n",
    "<script>\r\n  import {\r\n    activeTabIdx,\r\n    tabStore,\r\n    studyStore,\r\n    responseStore,\r\n    userStore\r\n  } from \"../modules/store.js\";\r\n  import { formatDate } from \"../modules/utils\";\r\n  import { db } from \"../modules/indexeddb\";\r\n\r\n  let name = \"Test Study\";\r\n  let participants = 27;\r\n  let datasets = 1326;\r\n  let activeTab = 0;\r\n  let endDate;\r\n  let startDate;\r\n  let currentStudyId;\r\n\r\n  activeTabIdx.subscribe(idx => {\r\n    currentStudyId = $tabStore[idx].studyId;\r\n    if (currentStudyId) {\r\n      const currentStudy = $studyStore.filter(v => v._id === currentStudyId)[0];\r\n      name = currentStudy.studyName;\r\n      //calc last day of study\r\n      let days =\r\n        Math.max(\r\n          currentStudy.minimumStudyDurationPerPerson,\r\n          currentStudy.maximumStudyDurationPerPerson\r\n        ) || 0;\r\n      endDate = new Date(currentStudy.latestBeginOfDataGathering);\r\n      endDate.setDate(endDate.getDate() + days);\r\n      startDate = currentStudy.earliestBeginOfDataGathering;\r\n      datasets = $responseStore.filter(v => v.studyId == currentStudyId).length;\r\n      participants = $userStore.filter(v => v.studyId == currentStudyId).length;\r\n    }\r\n  });\r\n</script>\r\n\r\n<style>\r\n  #info {\r\n    width: 100%;\r\n    height: 100%;\r\n    display: grid;\r\n    grid-template-columns: 2fr 1fr 1fr 1fr;\r\n    grid-gap: 1em;\r\n    justify-items: center;\r\n  }\r\n  .appTitle {\r\n    font-weight: bold;\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n  .name {\r\n    justify-self: start;\r\n  }\r\n</style>\r\n\r\n{#if currentStudyId}\r\n  <div id=\"info\">\r\n    <div class=\"name\">Study name: {name}</div>\r\n    <div>\r\n      Duration: {formatDate(startDate, false)} - {formatDate(endDate, false)}\r\n    </div>\r\n    <div>Number of participants: {participants}</div>\r\n    <div>Datasets collected: {datasets}</div>\r\n  </div>\r\n{:else}\r\n  <div class=\"appTitle\">SensQVis</div>\r\n{/if}\r\n",
    "<style>\r\n  div {\r\n    cursor: pointer;\r\n    font-size: 0.7rem;\r\n    height: 100%;\r\n    justify-items: center;\r\n    display: grid;\r\n    grid-gap: 2px;\r\n    padding-right: 1rem;\r\n    grid-template-areas:\r\n      \"undo redo\"\r\n      \"undoLabel redoLabel\";\r\n  }\r\n  label {\r\n    cursor: pointer;\r\n  }\r\n  #undo {\r\n    align-self: end;\r\n    grid-area: undo;\r\n  }\r\n  #redo {\r\n    align-self: end;\r\n    grid-area: redo;\r\n  }\r\n  #undoLabel {\r\n    color:#bbb;\r\n    grid-area: undoLabel;\r\n  }\r\n  #redoLabel {\r\n    color:#bbb;\r\n    grid-area: redoLabel;\r\n  }\r\n</style>\r\n\r\n<div>\r\n  <svg id=\"undo\" style=\"width:1rem;height:1rem\" viewBox=\"0 0 24 24\">\r\n    <path\r\n      fill=\"#bbb\"\r\n      d=\"M12.5,8C9.85,8 7.45,9 5.6,10.6L2,7V16H11L7.38,12.38C8.77,11.22\r\n      10.54,10.5 12.5,10.5C16.04,10.5 19.05,12.81\r\n      20.1,16L22.47,15.22C21.08,11.03 17.15,8 12.5,8Z\" />\r\n  </svg>\r\n  <label id=\"undoLabel\">undo</label>\r\n  <svg id=\"redo\" style=\"width:1rem;height:1rem\" viewBox=\"0 0 24 24\">\r\n    <path\r\n      fill=\"#bbb\"\r\n      d=\"M18.4,10.6C16.55,9 14.15,8 11.5,8C6.85,8 2.92,11.03\r\n      1.54,15.22L3.9,16C4.95,12.81 7.95,10.5 11.5,10.5C13.45,10.5 15.23,11.22\r\n      16.62,12.38L13,16H22V7L18.4,10.6Z\" />\r\n  </svg>\r\n  <label id=\"redoLabel\">redo</label>\r\n</div>\r\n",
    "<script>\r\n  import { createEventDispatcher } from \"svelte\";\r\n\r\n  export let tab;\r\n  let toggle = false;\r\n  function toggleEdit() {\r\n    if (tab.type === \"home\") return;\r\n    toggle = !toggle;\r\n  }\r\n\r\n  const dispatch = createEventDispatcher();\r\n  function update() {\r\n    toggleEdit();\r\n    dispatch(\"notify\", tab);\r\n  }\r\n</script>\r\n\r\n<style>\r\n  div {\r\n    cursor: pointer;\r\n    display: inline-block;\r\n    padding: 0.8em 1em;\r\n  }\r\n</style>\r\n\r\n{#if toggle}\r\n  <input type=\"text\" bind:value={tab.title} autofocus on:blur={update} />\r\n{:else}\r\n  <div on:click={toggleEdit}>{tab.title}</div>\r\n{/if}\r\n",
    "<script>\r\n  import { fly, fade } from \"svelte/transition\";\r\n  import { flip } from \"svelte/animate\";\r\n  import StudyImporter from \"../components/StudyImporter.svelte\";\r\n  import StudyCard from \"../components/StudyCard.svelte\";\r\n  import StudyVariables from \"../components/StudyVariables.svelte\";\r\n  import StudyUsers from \"../components/StudyUsers.svelte\";\r\n  import StudyResponses from \"../components/StudyResponses.svelte\";\r\n  import StudyMerger from \"../components/StudyMerger.svelte\";\r\n  import { studyStore, msgStore, responseStore } from \"../modules/store.js\";\r\n  import { dbName } from \"../modules/indexeddb.js\";\r\n  import { downloadAsJson } from \"../modules/utils.js\";\r\n\r\n  function dropDB() {\r\n    if (!confirm(\"Drop current database?\")) return;\r\n    console.log(\"delete db\", dbName);\r\n\r\n    window.indexedDB.deleteDatabase(dbName);\r\n    location.reload(true);\r\n  }\r\n\r\n  let studyData = {};\r\n  let toggleVars = false;\r\n  function showVars(event) {\r\n    studyData = event.detail;\r\n    toggleVars = true;\r\n  }\r\n  let toggleUsers = false;\r\n  function showUsers(event) {\r\n    studyData = event.detail;\r\n    toggleUsers = true;\r\n  }\r\n  let toggleResponses = false;\r\n  function showResponses(event) {\r\n    studyData = event.detail;\r\n    toggleResponses = true;\r\n  }\r\n\r\n  function closeDetailView(e) {\r\n    if (e.code === \"Escape\") {\r\n      toggleVars = false;\r\n      toggleUsers = false;\r\n      toggleResponses = false;\r\n      toggleNewStudy = false;\r\n    }\r\n  }\r\n\r\n  let selectedStudies = [];\r\n  function selectStudy(event) {\r\n    const study = event.detail;\r\n    const studyId = study.studyId;\r\n    let alreadySelected = false;\r\n    for (const studyItem of selectedStudies) {\r\n      if (studyItem.studyId === studyId) {\r\n        alreadySelected = true;\r\n        selectedStudies = selectedStudies.filter(v => v.studyId !== studyId);\r\n        break;\r\n      }\r\n    }\r\n    if (alreadySelected) return;\r\n    selectedStudies.push(study);\r\n    selectedStudies = selectedStudies;\r\n  }\r\n\r\n  $: disabled = selectedStudies.length ? false : true;\r\n  $: if (selectedStudies.length) {\r\n    console.log(\"show study actions\", selectedStudies);\r\n  }\r\n  $: studyCount = $studyStore.length;\r\n\r\n  function exportSelected() {\r\n    if (!selectedStudies.length) return;\r\n    const exportData = [];\r\n    for (const study of selectedStudies) {\r\n      const studyData = $studyStore.filter(v => v._id === study.studyId)[0];\r\n      const taskResults = $responseStore.filter(\r\n        v => v.studyId === study.studyId\r\n      );\r\n      exportData.push({ dataSchema: studyData, taskResults });\r\n    }\r\n    downloadAsJson(exportData, `export_of_${selectedStudies.length}_studies`);\r\n  }\r\n\r\n  function openSelected() {\r\n    if (!selectedStudies.length) return;\r\n    for (const study of selectedStudies) {\r\n      const _id = study.studyId;\r\n      const studyName = study.studyName;\r\n      const msg = {\r\n        type: \"navigation\",\r\n        action: \"openStudyTabs\",\r\n        data: { _id, studyName }\r\n      };\r\n      $msgStore.push(msg);\r\n    }\r\n    $msgStore = $msgStore; // make sure store gets updated\r\n  }\r\n\r\n  let toggleNewStudy = false;\r\n  function createNewFromSelected() {\r\n    if (!selectedStudies.length) return;\r\n    toggleNewStudy = true;\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .container {\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fit, 30ch);\r\n    grid-gap: 1rem;\r\n    align-items: flex-start;\r\n  }\r\n  .study {\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n  .debug {\r\n    text-align: center;\r\n    border: 1px dashed rgb(212, 212, 212);\r\n    color: rgb(212, 212, 212);\r\n    cursor: pointer;\r\n    display: inline-block;\r\n    margin: 1rem 0;\r\n    padding: 0.5rem;\r\n    border-radius: 4px;\r\n  }\r\n  .varInfo {\r\n    background-color: white;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 1;\r\n    border-radius: 0.25rem;\r\n    /* box-shadow: 0px 5px 10px 0px rgba(0, 0, 0, 0.25); */\r\n    box-shadow: 2px 3px 16px 3px rgba(0, 0, 0, 0.2);\r\n    overflow: hidden;\r\n  }\r\n  .close {\r\n    position: absolute;\r\n    background: white;\r\n    right: 1.5rem;\r\n    top: 0.5rem;\r\n    cursor: pointer;\r\n    font-size: 0.7rem;\r\n    font-weight: 400;\r\n  }\r\n  .actions {\r\n    margin-top: -0.5rem;\r\n    padding-bottom: 1rem;\r\n    display: flex;\r\n    align-items: baseline;\r\n    font-weight: 300;\r\n    /* color: rgb(202, 202, 202); */\r\n  }\r\n  .selectActions {\r\n    padding-left: 0.5em;\r\n  }\r\n  .action {\r\n    cursor: pointer;\r\n    /* font-weight: 400; */\r\n    display: inline-block;\r\n    padding: 0.5rem 1rem;\r\n    border-radius: 0.25rem;\r\n    margin: 0 0.5em;\r\n    box-shadow: 0 0 4px 1px rgba(0, 0, 0, 0.25);\r\n    color: white;\r\n    background-color: #72203fcb;\r\n  }\r\n  .action:hover {\r\n    box-shadow: 0 2px 10px 1px rgba(0, 0, 0, 0.2);\r\n  }\r\n  /* .open {\r\n    color: white;\r\n    background-color: tomato;\r\n  }\r\n  .new {\r\n    background-color: rgba(255, 99, 71, 0.479);\r\n    background-color: rgba(247, 100, 74, 0.3);\r\n  }\r\n  .export {\r\n    color: white;\r\n    background-color: #722040;\r\n  } */\r\n  .info {\r\n    padding: 0.5rem 0;\r\n  }\r\n</style>\r\n\r\n<svelte:window on:keyup={closeDetailView} />\r\n\r\n{#if toggleNewStudy}\r\n  <div class=\"varInfo\" transition:fly={{ x: -200, duration: 200 }}>\r\n    <StudyMerger {selectedStudies} />\r\n    <div class=\"close\" on:click={() => (toggleNewStudy = false)}>x close</div>\r\n  </div>\r\n{/if}\r\n\r\n{#if toggleVars}\r\n  <div class=\"varInfo\" transition:fly={{ x: -200, duration: 200 }}>\r\n    <StudyVariables {...studyData} />\r\n    <div class=\"close\" on:click={() => (toggleVars = false)}>x close</div>\r\n  </div>\r\n{/if}\r\n\r\n{#if toggleUsers}\r\n  <div class=\"varInfo\" transition:fly={{ x: -200, duration: 200 }}>\r\n    <StudyUsers {...studyData} />\r\n    <div class=\"close\" on:click={() => (toggleUsers = false)}>x close</div>\r\n  </div>\r\n{/if}\r\n\r\n{#if toggleResponses}\r\n  <div class=\"varInfo\" transition:fly={{ x: -200, duration: 200 }}>\r\n    <StudyResponses {...studyData} />\r\n    <div class=\"close\" on:click={() => (toggleResponses = false)}>x close</div>\r\n  </div>\r\n{/if}\r\n<div class=\"actions\">\r\n  {#if studyCount}\r\n    <span class=\"info\">\r\n      {studyCount < 2 ? studyCount + ' study' : studyCount + ' studies'}:\r\n    </span>\r\n  {/if}\r\n  {#if selectedStudies.length}\r\n    <span class=\"selectActions\" transition:fly={{ duration: 200, x: -10 }}>\r\n      <div class=\"action new\" class:disabled on:click={createNewFromSelected}>\r\n        create new study from selected ({selectedStudies.length})\r\n      </div>\r\n      <div class=\"action open\" class:disabled on:click={openSelected}>\r\n        open selected ({selectedStudies.length})\r\n      </div>\r\n      <div class=\"action export\" class:disabled on:click={exportSelected}>\r\n        export selected studies ({selectedStudies.length})\r\n      </div>\r\n    </span>\r\n  {/if}\r\n\r\n</div>\r\n<div class=\"container\" in:fade={{ duration: 300 }}>\r\n  {#each $studyStore as study (study._id)}\r\n    <div\r\n      animate:flip={{ duration: 300 }}\r\n      in:fly={{ duration: 300, y: -100 }}\r\n      class=\"study\">\r\n      <StudyCard\r\n        {...study}\r\n        on:showVariables={showVars}\r\n        on:showResponses={showResponses}\r\n        on:showUsers={showUsers}\r\n        on:selectStudy={selectStudy} />\r\n    </div>\r\n  {/each}\r\n  <div class=\"study\">\r\n    <StudyImporter />\r\n  </div>\r\n</div>\r\n\r\n<div class=\"debug\" on:click={dropDB}>Debug: wipe database</div>\r\n",
    "<script>\r\n  import { fade } from \"svelte/transition\";\r\n  import Anova from \"../charts/Anova.svelte\";\r\n  import WeekChart from \"../charts/WeekChart.svelte\";\r\n  import BDAChart from \"../charts/BDAChart.svelte\";\r\n  import ContextPie from \"../charts/ContextPie.svelte\";\r\n  import ImageChart from \"../charts/ImageChart.svelte\";\r\n  import { variableStore } from \"../modules/store\";\r\n  export let studyId;\r\n\r\n  let dependentVariable;\r\n  const numericVariables = $variableStore.filter(\r\n    v =>\r\n      v.studyId === studyId &&\r\n      v.isDemographic === false &&\r\n      v.measure === \"scale\"\r\n  );\r\n  if (numericVariables && numericVariables.length) {\r\n    dependentVariable = numericVariables[0];\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .userview {\r\n    position: relative;\r\n    display: grid;\r\n    grid-template-rows: min-content auto;\r\n    grid-gap: 1rem;\r\n  }\r\n  .optionsContainer {\r\n    position: relative;\r\n    width: 100%;\r\n    overflow: hidden;\r\n    font-size: 0.8rem;\r\n  }\r\n  .widgetContainer {\r\n    display: grid;\r\n    position: relative;\r\n    grid-template-columns: repeat(auto-fit, minmax(35rem, 1fr));\r\n    grid-template-rows: min-content;\r\n    grid-gap: 1rem;\r\n  }\r\n\r\n  .widget {\r\n    position: relative;\r\n    box-shadow: 0 0 6px 0 rgb(214, 214, 214);\r\n    border-radius: 0.25rem;\r\n    padding: 0.5em 1em;\r\n    width: 100%;\r\n    height: 24ch;\r\n    overflow: auto;\r\n  }\r\n</style>\r\n\r\n<div class=\"userview\" in:fade={{ duration: 300 }}>\r\n  <div class=\"optionsContainer\">\r\n    <select name=\"user\" id=\"userSelect\">\r\n      <option value=\"1\">\r\n        User 1 | avg. availability: 6.3 | responses: 223\r\n      </option>\r\n      <option value=\"2\">\r\n        User 2 | avg. availability: 2.3 | responses: 124\r\n      </option>\r\n      <option value=\"3\">User 3 | avg. availability: 3.1 | responses: 24</option>\r\n      <option value=\"4\">\r\n        User 4 | avg. availability: 4.3 | responses: 424\r\n      </option>\r\n      <option value=\"5\">\r\n        User 5 | avg. availability: 3.3 | responses: 254\r\n      </option>\r\n    </select>\r\n\r\n    <!-- <button id=\"newWidgetButton\">\r\n      New Widget\r\n      <svg style=\"width:25px;height:25px\">\r\n        <path\r\n          fill=\"#333\"\r\n          d=\"M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59\r\n          20,12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0\r\n          12,22A10,10 0 0,0 22,12A10,10 0 0,0\r\n          12,2M13,7H11V11H7V13H11V17H13V13H17V11H13V7Z\" />\r\n      </svg>\r\n    </button> -->\r\n  </div>\r\n  <div class=\"widgetContainer\">\r\n    <div class=\"widget\">\r\n      <Anova {studyId} {dependentVariable} />\r\n    </div>\r\n    <div class=\"widget\">\r\n      <WeekChart />\r\n    </div>\r\n    <div class=\"widget\">\r\n      <BDAChart />\r\n    </div>\r\n    <div class=\"widget\">\r\n      <ContextPie />\r\n    </div>\r\n    <div class=\"widget\">\r\n      <ImageChart />\r\n    </div>\r\n    <!--<div class=\"widget\">\r\n      <div class=\"addWidget\">\r\n        <svg style=\"width:50px;height:50px\" viewBox=\"0 0 24 24\">\r\n          <path\r\n            fill=\"#333\"\r\n            d=\"M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59\r\n            20,12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0\r\n            12,22A10,10 0 0,0 22,12A10,10 0 0,0\r\n            12,2M13,7H11V11H7V13H11V17H13V13H17V11H13V7Z\" />\r\n        </svg>\r\n        Add new widget\r\n      </div>\r\n    </div>-->\r\n  </div>\r\n</div>\r\n",
    "<script>\r\n  import { db } from \"../modules/indexeddb\";\r\n  import { fade } from \"svelte/transition\";\r\n  import { variableStore } from \"../modules/store\";\r\n  import VarStats from \"../components/VariableStats.svelte\";\r\n\r\n  export let studyId = 0;\r\n\r\n  const studyVariables =\r\n    $variableStore.filter(v => v.studyId === studyId) || [];\r\n  let variables = studyVariables;\r\n\r\n  const filterOptions = [\r\n    \"Demographics\",\r\n    \"Non-demographics\",\r\n    \"Nominal\",\r\n    \"Ordinal\",\r\n    \"Scale\",\r\n    \"Qualitative\"\r\n  ];\r\n  let selected = filterOptions;\r\n\r\n  function filter() {\r\n    let vars = studyVariables.filter(v => {\r\n      let bool = false;\r\n      // 1. check demographic type\r\n      for (const filter of selected) {\r\n        switch (filter) {\r\n          case \"Demographics\":\r\n            bool |= v.isDemographic === true;\r\n            break;\r\n          case \"Non-demographics\":\r\n            bool |= v.isDemographic === false;\r\n            break;\r\n        }\r\n      }\r\n      return bool;\r\n    });\r\n    // 2. filter remaining vars on measure\r\n    variables = vars.filter(v => {\r\n      let bool = false;\r\n      for (const filter of selected) {\r\n        bool |= v.measure === filter.toLowerCase();\r\n      }\r\n      return bool;\r\n    });\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .container {\r\n    position: relative;\r\n    display: grid;\r\n    grid-template-rows: min-content auto;\r\n    grid-gap: 1rem;\r\n  }\r\n  .stats {\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fit, minmax(60ch, 1fr));\r\n    grid-gap: 1rem;\r\n  }\r\n  .filter {\r\n    display: flex;\r\n    align-items: baseline;\r\n    font-weight: 300;\r\n    color: rgb(202, 202, 202);\r\n  }\r\n  label {\r\n    display: inline-block;\r\n    cursor: pointer;\r\n  }\r\n  input {\r\n    margin-left: 1.25rem;\r\n    margin-right: 0.25em;\r\n  }\r\n  :checked + label,\r\n  span {\r\n    /* font-weight: 400; */\r\n    position: relative;\r\n    color: #333;\r\n  }\r\n  span {\r\n    min-width: 10ch;\r\n  }\r\n</style>\r\n\r\n<div class=\"container\" in:fade={{ duration: 300 }}>\r\n  <div class=\"filter\">\r\n    <span>{variables.length} Variables:</span>\r\n    {#each filterOptions as option, i}\r\n      <input\r\n        id={i}\r\n        type=\"checkbox\"\r\n        bind:group={selected}\r\n        on:change={filter}\r\n        value={option} />\r\n      <label for={i}>{option}</label>\r\n    {/each}\r\n\r\n  </div>\r\n  <div class=\"stats\">\r\n    {#each variables as variable}\r\n      <VarStats {variable} />\r\n    {/each}\r\n  </div>\r\n</div>\r\n",
    "<script>\r\n  import { fade, fly } from \"svelte/transition\";\r\n  import { studyStore, variableStore } from \"../modules/store.js\";\r\n  import { formatDate } from \"../modules/utils.js\";\r\n  import CustomChart from \"../charts/CustomChart.svelte\";\r\n  import Custom3dChart from \"../charts/Custom3dChart.svelte\";\r\n  let studyId;\r\n  let combine = false;\r\n  let selectedVariables = [];\r\n  let studyName;\r\n  let variables = [];\r\n  $: if ($studyStore.length) {\r\n    // default to first study in store\r\n    studyId = $studyStore[0]._id;\r\n    studyName = $studyStore.filter(v => v._id === studyId)[0].studyName;\r\n\r\n    variables = $variableStore.filter(v => v.studyId === studyId);\r\n  }\r\n  function selectStudy() {\r\n    variables = $variableStore.filter(v => v.studyId === studyId);\r\n    selectedVariables = [];\r\n  }\r\n  function selectVariable() {\r\n    // console.log(selectedVariables);\r\n  }\r\n  function check3dChartAvailable() {\r\n    if (selectedVariables.length < 3) return false;\r\n    const vars = selectedVariables.filter(v => v.measure === \"scale\");\r\n    return vars.length == 3 && selectedVariables.length == 3;\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .container {\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n  .studyselect {\r\n    font-size: 0.8rem;\r\n  }\r\n  .customchart {\r\n    padding-top: 1rem;\r\n    display: grid;\r\n    height: 95%;\r\n    grid-template-columns: 1fr 3fr;\r\n    grid-gap: 1rem;\r\n  }\r\n  ul {\r\n    padding: 0;\r\n    list-style-type: none;\r\n    color: rgb(202, 202, 202);\r\n    font-style: italic;\r\n  }\r\n  :checked + label {\r\n    color: #333;\r\n    font-style: initial;\r\n  }\r\n  li {\r\n    display: grid;\r\n    grid-template-columns: auto 2fr 1fr;\r\n    align-items: baseline;\r\n    grid-gap: 0.5rem;\r\n    padding: 0.15em 0;\r\n  }\r\n  li:hover {\r\n    color: #333;\r\n    background-color: rgb(230, 230, 230);\r\n  }\r\n  label {\r\n    display: inline-block;\r\n    cursor: pointer;\r\n  }\r\n  .varselect {\r\n    padding: 1rem;\r\n    font-weight: 300;\r\n    border-radius: 0.25rem;\r\n    box-shadow: 0 0 6px 0 rgb(214, 214, 214);\r\n  }\r\n  .chart {\r\n    display: grid;\r\n    place-items: center;\r\n  }\r\n  .combine {\r\n    cursor: pointer;\r\n    font-weight: 600;\r\n    display: inline-block;\r\n    padding: 0.5rem 1rem;\r\n    border-radius: 0.25rem;\r\n    background: tomato;\r\n    color: white;\r\n    text-align: center;\r\n    box-shadow: 0 0 6px 0 rgba(0, 0, 0, 0.25);\r\n    margin-bottom: 1rem;\r\n  }\r\n  .combine:hover {\r\n    background: #722040;\r\n  }\r\n</style>\r\n\r\n<div class=\"container\" in:fade={{ duration: 300 }}>\r\n  {#if studyId}\r\n    <div class=\"studyselect\">\r\n      Selected study:\r\n      <select\r\n        name=\"studyselect\"\r\n        id=\"studyselect\"\r\n        bind:value={studyId}\r\n        on:change={selectStudy}>\r\n        {#each $studyStore as study}\r\n          <option value={study._id}>\r\n            {study.studyName} (imported {formatDate(study.__created)})\r\n          </option>\r\n        {/each}\r\n      </select>\r\n    </div>\r\n    <div class=\"customchart\">\r\n      <div class=\"varselect\">\r\n        Variables of {studyName}\r\n        <ul class=\"varList\">\r\n          {#each variables as variable}\r\n            <li>\r\n              <input\r\n                id={variable.variableName}\r\n                type=\"checkbox\"\r\n                on:change={selectVariable}\r\n                bind:group={selectedVariables}\r\n                value={variable} />\r\n              <label for={variable.variableName}>{variable.variableName}</label>\r\n              <span>({variable.measure})</span>\r\n            </li>\r\n          {/each}\r\n        </ul>\r\n        {#if selectedVariables.length > 1}\r\n          <div\r\n            transition:fly={{ duration: 200, x: -50 }}\r\n            class=\"combine\"\r\n            on:click={() => (combine = !combine)}>\r\n            {#if combine}\r\n              Split into separate charts\r\n            {:else}\r\n              Combine in one chart\r\n              {#if check3dChartAvailable()}(3D){/if}\r\n            {/if}\r\n          </div>\r\n        {/if}\r\n      </div>\r\n      <div class=\"chart\">\r\n        {#if selectedVariables.length}\r\n          {#if check3dChartAvailable() && combine}\r\n            <Custom3dChart {selectedVariables} />\r\n          {:else}\r\n            <CustomChart {selectedVariables} />\r\n          {/if}\r\n        {/if}\r\n      </div>\r\n    </div>\r\n  {/if}\r\n</div>\r\n",
    "<script>\r\n  import MainChart from \"../charts/MainChart.svelte\";\r\n  import Sherlock from \"../charts/Sherlock.svelte\";\r\n\r\n  import { fade } from \"svelte/transition\";\r\n\r\n  export let studyId;\r\n</script>\r\n\r\n<style>\r\n  .overview {\r\n    height: 100%;\r\n    display: grid;\r\n    grid-template-columns: 3fr 1fr;\r\n    grid-gap: 1em;\r\n  }\r\n  .mainChart {\r\n    height: 100%;\r\n  }\r\n  aside {\r\n    width: 97%;\r\n    /* height: 97%; */\r\n    box-shadow: 0px 0px 14px 1px #e8e8e8;\r\n    padding: 1em;\r\n    border-radius: 4px;\r\n  }\r\n</style>\r\n\r\n<div class=\"overview\" in:fade={{ duration: 300 }}>\r\n  <div class=\"mainChart\">\r\n    <MainChart {studyId} />\r\n  </div>\r\n  <aside>\r\n    <Sherlock />\r\n  </aside>\r\n</div>\r\n",
    "<script>\r\n  import { formatDate, downloadAsJson } from \"../modules/utils.js\";\r\n  import { fade } from \"svelte/transition\";\r\n  import { db } from \"../modules/indexeddb.js\";\r\n  import { studyStore, msgStore, variableStore } from \"../modules/store.js\";\r\n  import { createEventDispatcher } from \"svelte\";\r\n\r\n  export let _id,\r\n    studyName,\r\n    description,\r\n    tasks,\r\n    __created,\r\n    minimumStudyDurationPerPerson,\r\n    maximumStudyDurationPerPerson,\r\n    earliestBeginOfDataGathering,\r\n    latestBeginOfDataGathering;\r\n\r\n  const studyId = _id;\r\n  const dispatch = createEventDispatcher();\r\n  function showVariables() {\r\n    dispatch(\"showVariables\", { studyId, studyName });\r\n  }\r\n  function showUsers() {\r\n    dispatch(\"showUsers\", { studyId, studyName });\r\n  }\r\n  function showResponses() {\r\n    dispatch(\"showResponses\", { studyId, studyName });\r\n  }\r\n\r\n  let selected = false;\r\n  function selectStudy() {\r\n    dispatch(\"selectStudy\", { studyId, studyName });\r\n    selected = !selected;\r\n  }\r\n\r\n  function showStudy() {\r\n    const msg = {\r\n      type: \"navigation\",\r\n      action: \"openStudyTabs\",\r\n      data: { _id, studyName }\r\n    };\r\n    $msgStore.push(msg);\r\n    $msgStore = $msgStore; // make sure store gets updated\r\n  }\r\n\r\n  let responses = 0;\r\n  let userCount = 0;\r\n\r\n  //calc last day of study\r\n  let days =\r\n    Math.max(minimumStudyDurationPerPerson, maximumStudyDurationPerPerson) || 0;\r\n  let endDate = new Date(latestBeginOfDataGathering);\r\n  endDate.setDate(endDate.getDate() + days);\r\n\r\n  //FIXME: use stores instead of db\r\n  let res = db\r\n    .transaction(\"StudyResponses\")\r\n    .objectStore(\"StudyResponses\")\r\n    .index(\"studyId\")\r\n    .count(_id);\r\n  res.onsuccess = e => {\r\n    const count = e.target.result;\r\n    responses = count;\r\n  };\r\n\r\n  res = db\r\n    .transaction(\"Users\")\r\n    .objectStore(\"Users\")\r\n    .index(\"studyId\")\r\n    .count(_id);\r\n  res.onsuccess = e => {\r\n    const count = e.target.result;\r\n    userCount = count;\r\n  };\r\n\r\n  function deleteStudy() {\r\n    if (!confirm(\"Do you really want to delete this study?\")) return;\r\n    const tx = db.transaction(\r\n      [\r\n        \"Studies\",\r\n        \"StudyResponses\",\r\n        \"StudyTasks\",\r\n        \"StudyVariables\",\r\n        \"Users\",\r\n        \"TaskResults\"\r\n      ],\r\n      \"readwrite\"\r\n    );\r\n\r\n    const deleteRows = e => {\r\n      const cursor = e.target.result;\r\n      if (cursor) {\r\n        cursor.delete();\r\n        cursor.continue();\r\n      }\r\n    };\r\n\r\n    const deleteByIndex = store => {\r\n      tx\r\n        .objectStore(store)\r\n        .index(\"studyId\")\r\n        .openCursor(_id).onsuccess = deleteRows;\r\n    };\r\n\r\n    tx.objectStore(\"Studies\").delete(_id);\r\n    [\r\n      \"StudyResponses\",\r\n      \"StudyTasks\",\r\n      \"StudyVariables\",\r\n      \"Users\",\r\n      \"TaskResults\"\r\n    ].forEach(store => {\r\n      deleteByIndex(store);\r\n    });\r\n\r\n    // notify stores\r\n    tx.objectStore(\"Studies\").getAll().onsuccess = e =>\r\n      studyStore.set(e.target.result);\r\n    tx.objectStore(\"StudyVariables\").getAll().onsuccess = e =>\r\n      variableStore.set(e.target.result);\r\n  }\r\n\r\n  function exportStudy() {\r\n    const studyData = $studyStore.filter(v => v._id === studyId)[0];\r\n    if (studyData) {\r\n      console.log(\"export study\", studyId);\r\n\r\n      const res = db\r\n        .transaction(\"StudyResponses\")\r\n        .objectStore(\"StudyResponses\")\r\n        .index(\"studyId\")\r\n        .getAll(studyId);\r\n      res.onsuccess = e => {\r\n        const taskResults = e.target.result;\r\n        downloadAsJson(\r\n          { dataSchema: studyData, taskResults },\r\n          `export_study_${studyId}_${studyName.replace(/\\s+/g, \"_\")}`\r\n        );\r\n      };\r\n      res.onerror = e => {\r\n        downloadAsJson(\r\n          { dataSchema: studyData },\r\n          `export_study_${studyId}_${studyName.replace(/\\s+/g, \"_\")}`\r\n        );\r\n      };\r\n    }\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .card {\r\n    border-radius: 0.25rem;\r\n    box-shadow: 0 0 6px 0 rgb(214, 214, 214);\r\n    text-align: center;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n  .card:hover {\r\n    box-shadow: 0 3px 14px 3px rgba(0, 0, 0, 0.2);\r\n  }\r\n  .created {\r\n    position: absolute;\r\n    top: 2.4rem;\r\n    left: 25%;\r\n    font-size: 0.7rem;\r\n    font-style: italic;\r\n    color: rgb(172, 172, 172);\r\n    font-weight: 300;\r\n  }\r\n  .date {\r\n    margin-top: 0.5rem;\r\n    font-size: 0.7rem;\r\n  }\r\n  .date > span {\r\n    color: rgb(172, 172, 172);\r\n  }\r\n  h4 {\r\n    margin: 0;\r\n    padding: 1em;\r\n    cursor: pointer;\r\n  }\r\n  h4:hover {\r\n    text-decoration-line: underline;\r\n  }\r\n  .delete {\r\n    position: absolute;\r\n    right: -0.5rem;\r\n    top: -0.5rem;\r\n    transition: opacity 0.15s ease-in;\r\n    cursor: pointer;\r\n  }\r\n  .card > .delete {\r\n    opacity: 0;\r\n  }\r\n  .card:hover > .delete {\r\n    opacity: 1;\r\n  }\r\n  .mainInfo {\r\n    padding-top: 0.5rem;\r\n  }\r\n  .vars {\r\n    cursor: pointer;\r\n    text-decoration-line: initial;\r\n  }\r\n  .vars:hover {\r\n    text-decoration-line: underline;\r\n  }\r\n  .actions {\r\n    margin-top: 0.5rem;\r\n\r\n    font-size: 0.7rem;\r\n    font-weight: 600;\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n\r\n    color: white;\r\n    border-bottom-left-radius: 0.25rem;\r\n    border-bottom-right-radius: 0.25rem;\r\n  }\r\n  .actions > div {\r\n    cursor: pointer;\r\n    height: 100%;\r\n    background: rgba(0, 0, 0, 0.2);\r\n    padding: 0.5rem;\r\n  }\r\n  .actions > div:hover {\r\n    background: rgba(0, 0, 0, 0.3);\r\n  }\r\n  .export {\r\n    border-bottom-left-radius: 0.25rem;\r\n  }\r\n  .select {\r\n    border-bottom-right-radius: 0.25rem;\r\n  }\r\n  .selected {\r\n    box-shadow: 0 0px 0px 0.2rem #72203f71 !important;\r\n  }\r\n</style>\r\n\r\n<div class=\"card\" class:selected>\r\n  <div class=\"delete\" on:click={deleteStudy}>\r\n    <svg style=\"width:24px;height:24px;\" viewBox=\"0 0 24 24\">\r\n      <path\r\n        fill=\"#777\"\r\n        d=\"M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59\r\n        20,12C20,16.41 16.41,20 12,20M12,2C6.47,2 2,6.47 2,12C2,17.53 6.47,22\r\n        12,22C17.53,22 22,17.53 22,12C22,6.47 17.53,2\r\n        12,2M14.59,8L12,10.59L9.41,8L8,9.41L10.59,12L8,14.59L9.41,16L12,13.41L14.59,16L16,14.59L13.41,12L16,9.41L14.59,8Z\" />\r\n    </svg>\r\n  </div>\r\n  <h4 on:click|stopPropagation={showStudy}>{studyName}</h4>\r\n  <div class=\"mainInfo\">\r\n    <span class=\"vars\" on:click={showUsers}>Users: {userCount}</span>\r\n    <span class=\"vars\" on:click={showResponses}>Responses: {responses}</span>\r\n    <br />\r\n    <span class=\"vars\" on:click={showVariables}>\r\n      {#await $variableStore.filter(v => v.studyId == _id).length then variableCount}\r\n        Variables: {variableCount}\r\n      {/await}\r\n    </span>\r\n  </div>\r\n  <div class=\"date\">\r\n    <span>Duration:</span>\r\n    {formatDate(earliestBeginOfDataGathering, false)} - {formatDate(endDate, false)}\r\n  </div>\r\n  <div class=\"created\">imported: {formatDate(__created)}</div>\r\n  <div class=\"actions\">\r\n    <div class=\"export\" on:click={exportStudy}>export</div>\r\n    <div class=\"select\" on:click={selectStudy}>\r\n      {selected ? 'unselect' : 'select'}\r\n    </div>\r\n  </div>\r\n</div>\r\n",
    "<script>\r\n  import { db } from \"../modules/indexeddb.js\";\r\n  import { variableStore } from \"../modules/store.js\";\r\n  export let studyId = 0;\r\n  export let studyName = \"\";\r\n\r\n  function ucFirst(string) {\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .container {\r\n    position: relative;\r\n    padding: 1em;\r\n    padding-bottom: 2em;\r\n    height: 85vh;\r\n    overflow-y: auto;\r\n  }\r\n  table {\r\n    border-collapse: collapse;\r\n    font-size: 0.7rem;\r\n  }\r\n  th,\r\n  td {\r\n    text-align: left;\r\n    padding: 0.8em 0.6em;\r\n    border-bottom: 1px solid #ddd;\r\n  }\r\n  th {\r\n    font-weight: 600;\r\n  }\r\n  tr:hover {\r\n    background-color: #f5f5f5;\r\n  }\r\n</style>\r\n\r\n<div class=\"container\">\r\n  <p>\r\n    Variables of\r\n    <strong>{studyName}</strong>\r\n  </p>\r\n  <table>\r\n    <tr>\r\n      <th>Name</th>\r\n      <th>Label</th>\r\n      <th>Measure</th>\r\n    </tr>\r\n    {#each $variableStore.filter(v => v.studyId == studyId) as v}\r\n      <tr>\r\n        <td class=\"name\">{v.variableName}</td>\r\n        <td class=\"label\">{v.variableLabel}</td>\r\n        <td class=\"measure\">{ucFirst(v.measure)}</td>\r\n      </tr>\r\n    {/each}\r\n  </table>\r\n</div>\r\n",
    "<script>\r\n  import { db } from \"../modules/indexeddb.js\";\r\n\r\n  export let studyId = 0;\r\n  export let studyName = \"\";\r\n  let users = [];\r\n  const userMap = new Map();\r\n  if (studyId) {\r\n    const tx = db.transaction([\"Users\", \"Demographics\"]);\r\n    const res = tx\r\n      .objectStore(\"Users\")\r\n      .index(\"studyId\")\r\n      .getAll(studyId);\r\n    res.onsuccess = e => {\r\n      const studyUsers = e.target.result;\r\n      for (const userData of studyUsers) {\r\n        const userId = userData.userId;\r\n\r\n        const res = tx\r\n          .objectStore(\"Demographics\")\r\n          .index(\"userId\")\r\n          .getAll(userId);\r\n        res.onsuccess = e => {\r\n          const demographics = e.target.result;\r\n          userMap.set(userId, { demographics });\r\n          users = [...userMap];\r\n        };\r\n      }\r\n    };\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .container {\r\n    position: relative;\r\n    padding: 1em;\r\n    padding-bottom: 2em;\r\n    height: 85vh;\r\n    overflow-y: auto;\r\n  }\r\n  table {\r\n    border-collapse: collapse;\r\n    font-size: 0.7rem;\r\n  }\r\n  th,\r\n  td {\r\n    text-align: left;\r\n    padding: 0.8em 0.6em;\r\n    border-bottom: 1px solid #ddd;\r\n  }\r\n  th {\r\n    font-weight: 600;\r\n  }\r\n  tr:hover {\r\n    background-color: #f5f5f5;\r\n  }\r\n</style>\r\n\r\n<div class=\"container\">\r\n  <p>\r\n    Users of\r\n    <strong>{studyName}</strong>\r\n  </p>\r\n  <table>\r\n    <tr>\r\n      <th>User Id</th>\r\n      <th>Demographics</th>\r\n    </tr>\r\n    {#each users as data}\r\n      <tr>\r\n        <td> {data[0]} </td>\r\n        <td>\r\n          <table>\r\n            {#each data[1].demographics as demo}\r\n              <tr>\r\n                <td>{demo.variableName}:</td>\r\n                <td> {demo.value}</td>\r\n              </tr>\r\n            {/each}\r\n          </table>\r\n        </td>\r\n      </tr>\r\n    {/each}\r\n  </table>\r\n</div>\r\n",
    "<script>\r\n  import { db } from \"../modules/indexeddb.js\";\r\n  import { formatDate } from \"../modules/utils.js\";\r\n\r\n  export let studyId = 0;\r\n  export let studyName = \"\";\r\n  let responses = [];\r\n  if (studyId) {\r\n    const res = db\r\n      .transaction(\"StudyResponses\")\r\n      .objectStore(\"StudyResponses\")\r\n      .index(\"studyId\")\r\n      .getAll(studyId);\r\n    res.onsuccess = e => {\r\n      const userResponses = e.target.result;\r\n      for (const response of userResponses) {\r\n        responses = [...responses, response];\r\n      }\r\n    };\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .container {\r\n    position: relative;\r\n    padding: 1em;\r\n    padding-bottom: 2em;\r\n    height: 85vh;\r\n    overflow-y: auto;\r\n  }\r\n  table {\r\n    border-collapse: collapse;\r\n    font-size: 0.7rem;\r\n  }\r\n  th,\r\n  td {\r\n    text-align: left;\r\n    padding: 0.8em 0.6em;\r\n    border-bottom: 1px solid #ddd;\r\n  }\r\n  th {\r\n    font-weight: 600;\r\n  }\r\n  tr:hover {\r\n    background-color: #f5f5f5;\r\n  }\r\n</style>\r\n\r\n<div class=\"container\">\r\n  <p>\r\n    Responses of\r\n    <strong>{studyName}</strong>\r\n  </p>\r\n  <table>\r\n    <tr>\r\n      <th>User Id</th>\r\n      <th>Task</th>\r\n      <th>Date</th>\r\n      <th>Results</th>\r\n    </tr>\r\n    {#each responses as response}\r\n      <tr>\r\n        <td>{response.userId}</td>\r\n        <td>{response.taskName}</td>\r\n        <td nowrap>\r\n          Start: {formatDate(new Date(response.startDate))}\r\n          <br />\r\n           End: {formatDate(new Date(response.endDate))}\r\n        </td>\r\n        <td>\r\n          <table style=\"width:100%\">\r\n            {#each response.stepResults as steps}\r\n              {#each steps.stepItemResults as item}\r\n                <tr>\r\n                  <td style=\"width:65%\">{item.variableName}:</td>\r\n                  <td>{item.value}</td>\r\n                </tr>\r\n              {/each}\r\n            {/each}\r\n          </table>\r\n        </td>\r\n      </tr>\r\n    {/each}\r\n  </table>\r\n</div>\r\n",
    "<script>\r\n  import { studyStore, variableStore } from \"../modules/store.js\";\r\n  export let selectedStudies = [];\r\n  let newName = \"\";\r\n  let mergedVariableNames = new Set();\r\n  let selectedVariables = [];\r\n  if (selectedStudies.length) {\r\n    const studyId = selectedStudies[0].studyId;\r\n    // get variables of 1st study\r\n    const variables = $variableStore.filter(v => v.studyId === studyId);\r\n    mergedVariableNames = new Set(variables.map(v => v.variableName));\r\n    for (const study of selectedStudies) {\r\n      const variables = $variableStore.filter(v => v.studyId === study.studyId);\r\n      const varNames = new Set(variables.map(v => v.variableName));\r\n\r\n      // intersect with set of other variables\r\n      mergedVariableNames = new Set(\r\n        [...mergedVariableNames].filter(v => varNames.has(v))\r\n      );\r\n    }\r\n    console.log(mergedVariableNames);\r\n    selectedVariables = [...mergedVariableNames];\r\n  }\r\n  $: disabled = newName.trim().length ? false : true;\r\n</script>\r\n\r\n<style>\r\n  .container {\r\n    position: relative;\r\n    padding: 0.5rem 2rem;\r\n    height: 87vh;\r\n    overflow-y: auto;\r\n  }\r\n  input::placeholder {\r\n    color: rgb(192, 192, 192);\r\n  }\r\n  label {\r\n    display: inline-block;\r\n    padding-left: 0.25em;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .create {\r\n    cursor: pointer;\r\n    font-weight: 600;\r\n    display: inline-block;\r\n    padding: 0.5rem 1rem;\r\n    border-radius: 0.25rem;\r\n    background: tomato;\r\n    color: white;\r\n    width: 100%;\r\n    text-align: center;\r\n    box-shadow: 0 0 6px 0 rgba(0, 0, 0, 0.25);\r\n  }\r\n  .create:hover {\r\n    background: #722040;\r\n  }\r\n  .disabled {\r\n    background: rgba(255, 99, 71, 0.2);\r\n    cursor: initial;\r\n  }\r\n  .varList {\r\n    list-style-type: none;\r\n    padding-left: 24px;\r\n    color: rgb(202, 202, 202);\r\n    font-style: italic;\r\n  }\r\n  :checked + label {\r\n    color: #333;\r\n    font-style: initial;\r\n  }\r\n</style>\r\n\r\n<div class=\"container\">\r\n  <p>\r\n    Create New\r\n    <strong>Study</strong>\r\n  </p>\r\n  Combine the following studies\r\n  <ul>\r\n    {#each selectedStudies as study}\r\n      <li>{study.studyName}</li>\r\n    {/each}\r\n  </ul>\r\n  into new study:\r\n  <input\r\n    type=\"text\"\r\n    placeholder=\"New Study Name\"\r\n    bind:value={newName}\r\n    autofocus\r\n    spellcheck=\"false\" />\r\n\r\n  <p>Include variables (that appear in all selected studies):</p>\r\n  <ul class=\"varList\">\r\n    {#each [...mergedVariableNames] as name}\r\n      <li>\r\n        <input\r\n          id={name}\r\n          type=\"checkbox\"\r\n          bind:group={selectedVariables}\r\n          value={name} />\r\n        <label for={name}>{name}</label>\r\n      </li>\r\n    {/each}\r\n  </ul>\r\n  <div class=\"create\" class:disabled>Create Study</div>\r\n</div>\r\n",
    "<script>\r\n  import stat from \"../modules/simple-statistics.min\";\r\n  import VariableNominalChart from \"../charts/VariableNominalChart.svelte\";\r\n  import VariableScaleChart from \"../charts/VariableScaleChart.svelte\";\r\n  import VariableQualitativeChart from \"../charts/VariableQualitativeChart.svelte\";\r\n  import { uc } from \"../modules/utils\";\r\n\r\n  export let variable = {};\r\n  // get answer results for this variable\r\n  $: data = variable.results.map(v => v.value);\r\n</script>\r\n\r\n<style>\r\n  .card {\r\n    display: grid;\r\n    box-shadow: 0 0 6px 0 rgb(214, 214, 214);\r\n    border-radius: 0.25rem;\r\n    grid-template-columns: min-content 1fr;\r\n    grid-gap: 2rem;\r\n\r\n    padding: 1em;\r\n  }\r\n  table {\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n    font-size: 0.7rem;\r\n  }\r\n  td {\r\n    padding: 0.8em 0;\r\n    border-bottom: 1px solid #ddd;\r\n  }\r\n  tr:hover {\r\n    background-color: #f5f5f5;\r\n  }\r\n  th {\r\n    padding-top: 1rem;\r\n    text-align: left;\r\n    font-weight: 600;\r\n  }\r\n\r\n  .choices tr:hover {\r\n    background-color: initial;\r\n  }\r\n\r\n  .charts {\r\n    display: grid;\r\n    height: 100%;\r\n    place-items: center;\r\n  }\r\n\r\n  .label,\r\n  .measure {\r\n    font-weight: 300;\r\n    font-size: 0.7rem;\r\n  }\r\n  .measure {\r\n    font-style: italic;\r\n  }\r\n  h4 {\r\n    font-size: 0.7rem;\r\n    font-weight: 600;\r\n    margin-top: 1rem;\r\n    margin-bottom: 0;\r\n  }\r\n  .answerLog {\r\n    position: relative;\r\n    height: 20ch;\r\n    overflow: auto;\r\n    /* box-shadow: 0px 0px 0px 1px rgba(0, 0, 0, 0.25); */\r\n  }\r\n  .sep {\r\n    color: rgb(214, 214, 214);\r\n    padding: 0 0.5em;\r\n  }\r\n</style>\r\n\r\n<div class=\"card\">\r\n  <div class=\"charts\">\r\n    {#if variable.measure == 'nominal'}\r\n      <VariableNominalChart {variable} />\r\n    {/if}\r\n    {#if variable.measure == 'scale'}\r\n      <VariableScaleChart {variable} />\r\n    {/if}\r\n  </div>\r\n  <div class=\"text\">\r\n    <div class=\"name\">{variable.variableName}</div>\r\n    <div class=\"label\">{variable.variableLabel}</div>\r\n    <div class=\"measure\">{uc(variable.measure)}</div>\r\n    {#if variable.dataformat.hasOwnProperty('textChoices')}\r\n      <div class=\"choices\">\r\n        <h4>Answer options</h4>\r\n        <table>\r\n          {#each variable.dataformat.textChoices as choice}\r\n            <tr>\r\n              <td>({choice.value}) {choice.valueLabel || choice.text}</td>\r\n            </tr>\r\n          {/each}\r\n        </table>\r\n      </div>\r\n    {/if}\r\n    <div class=\"stats\">\r\n      <h4>Statistics</h4>\r\n      <table>\r\n        <tr>\r\n          <td style=\"width:22ch\">Count of records:</td>\r\n          <td>{data.length}</td>\r\n        </tr>\r\n        {#if variable.measure == 'scale' || variable.measure == 'ordinal'}\r\n          <tr>\r\n            <td>Min - Max:</td>\r\n            <td>{stat.min(data)} - {stat.max(data)}</td>\r\n          </tr>\r\n        {/if}\r\n        <tr>\r\n          <td>Mode:</td>\r\n          <td>{stat.modeFast(data)}</td>\r\n        </tr>\r\n        {#if variable.measure == 'scale' || variable.measure == 'ordinal'}\r\n          <tr>\r\n            <td>Median:</td>\r\n            <td>{stat.median(data)}</td>\r\n          </tr>\r\n        {/if}\r\n        {#if variable.measure == 'scale'}\r\n          <tr>\r\n            <td>Mean:</td>\r\n            <td>\r\n              {stat.mean(data).toFixed(4)} (sd = {stat\r\n                .standardDeviation(data)\r\n                .toFixed(4)})\r\n            </td>\r\n          </tr>\r\n        {/if}\r\n        {#if variable.measure == 'qualitative'}\r\n          <tr>\r\n            <td>Text length:</td>\r\n            <td>\r\n              {stat.min(data.map(v => v.length))} (min)\r\n              <span class=\"sep\">|</span>\r\n              {stat.mean(data.map(v => v.length))} (avg)\r\n              <span class=\"sep\">|</span>\r\n              {stat.max(data.map(v => v.length))} (max)\r\n            </td>\r\n          </tr>\r\n        {/if}\r\n      </table>\r\n      {#if variable.measure == 'qualitative'}\r\n        <h4>Answers given by users</h4>\r\n        <div class=\"answerLog\">\r\n          <VariableQualitativeChart {variable} />\r\n        </div>\r\n      {/if}\r\n    </div>\r\n\r\n  </div>\r\n\r\n</div>\r\n",
    "<script>\r\n  import { db } from \"../modules/indexeddb.js\";\r\n  import {\r\n    studyStore,\r\n    variableStore,\r\n    responseStore,\r\n    userStore\r\n  } from \"../modules/store.js\";\r\n\r\n  import { onMount } from \"svelte\";\r\n  onMount(() => {\r\n    const el = document.getElementById(\"studyImport\");\r\n    el.onchange = () => {\r\n      for (const file of el.files) {\r\n        //console.log(file);\r\n        if (file.type !== \"application/json\") {\r\n          console.error(\"invalid file type\");\r\n          continue;\r\n        }\r\n        // read file contents\r\n        const reader = new FileReader();\r\n        console.log(\"importing file: \", file.name);\r\n        reader.readAsText(file);\r\n        reader.onload = e => {\r\n          const text = reader.result;\r\n          console.log(\"file reader finished importing\");\r\n          try {\r\n            console.log(\"parsing json file: \", file.name);\r\n            let jsn = JSON.parse(text);\r\n            console.log(\"finished parsing file\");\r\n            // console.log(jsn);\r\n\r\n            // --------------- import study into database\r\n            // if it is not an array it only contains data of one study\r\n            if (!(jsn instanceof Array)) {\r\n              jsn = [jsn];\r\n            }\r\n\r\n            // import data of each study\r\n            for (const importData of jsn) {\r\n              // console.log(\"import study: \", importData);\r\n              // sanity checks:\r\n              if (!importData.hasOwnProperty(\"dataSchema\")) {\r\n                console.error(\"missing prop: dataSchema\");\r\n                return;\r\n              }\r\n\r\n              const study = importData.dataSchema;\r\n              if (!study.hasOwnProperty(\"_id\")) {\r\n                console.error(\"missing prop: _id\");\r\n                return;\r\n              }\r\n              if (!study.hasOwnProperty(\"studyName\")) {\r\n                console.error(\"missing prop: studyName\");\r\n                return;\r\n              }\r\n              if (!study.hasOwnProperty(\"description\")) {\r\n                console.error(\"missing prop: description\");\r\n                return;\r\n              }\r\n\r\n              // insert study data into db\r\n              if (!db) {\r\n                console.error(\"missing database object\");\r\n                return;\r\n              }\r\n\r\n              const tx = db.transaction(\r\n                [\"Studies\", \"StudyVariables\", \"StudyTasks\"],\r\n                \"readwrite\"\r\n              );\r\n              const store = tx.objectStore(\"Studies\");\r\n\r\n              study.__created = new Date();\r\n              const result = store.add(study);\r\n              result.onerror = event => {\r\n                // ConstraintError occurs when an object with the same id already exists\r\n                if (result.error.name == \"ConstraintError\") {\r\n                  if (\r\n                    confirm(\r\n                      \"This study already exists, do you want to replace it?\"\r\n                    )\r\n                  ) {\r\n                    console.log(\"replace study\");\r\n                    event.preventDefault(); // don't abort the transaction\r\n                    event.stopPropagation();\r\n                    event.target.source.put(study); //source -> objectStore for this event\r\n                    result.onsuccess();\r\n                  } else {\r\n                    console.log(\"don't replace study\");\r\n                  }\r\n                }\r\n              };\r\n\r\n              // if study data were successfully created: store used tasks\r\n              result.onsuccess = () => {\r\n                const taskStore = tx.objectStore(\"StudyTasks\");\r\n                const studyId = study._id;\r\n                for (const task of study.tasks) {\r\n                  const taskData = {\r\n                    studyId: studyId,\r\n                    taskId: task._id,\r\n                    taskName: task.taskName,\r\n                    personalData: JSON.parse(task.personalData) // cast string \"false\" to boolean false\r\n                  };\r\n                  //Update StudyTasks\r\n                  taskStore.put(taskData);\r\n                }\r\n\r\n                // generate StudyVariables\r\n                const studyVars = new Map();\r\n                // Step 1: get variable definition of each task\r\n                for (const task of study.tasks) {\r\n                  // map specific questionnaire types to statistical types\r\n                  const typeMapping = new Map([\r\n                    [\"Numeric\", \"scale\"],\r\n                    [\"TextChoice\", \"nominal\"],\r\n                    [\"DiscreteScale\", \"scale\"], //FIXME: check answer labels\r\n                    [\"ContinuousScale\", \"scale\"],\r\n                    [\"Text\", \"qualitative\"]\r\n                  ]);\r\n                  for (const step of task.steps) {\r\n                    for (const stepItem of step.stepItems) {\r\n                      stepItem.__created = new Date();\r\n                      stepItem.studyId = studyId;\r\n                      stepItem.isDemographic = JSON.parse(task.personalData);\r\n                      stepItem.measure = typeMapping.get(\r\n                        stepItem.dataformat.type\r\n                      );\r\n                      stepItem.results = []; // used to hold all task results for this variable\r\n                      studyVars.set(\r\n                        `${studyId}|${stepItem.variableName}`,\r\n                        stepItem\r\n                      );\r\n                    }\r\n                  }\r\n                }\r\n                // Step 2: check if there are any results in this import that contain these variables\r\n                if (\r\n                  importData.hasOwnProperty(\"taskResults\") &&\r\n                  importData.taskResults instanceof Array\r\n                ) {\r\n                  for (const taskResult of importData.taskResults) {\r\n                    for (const step of taskResult.stepResults) {\r\n                      for (const stepItem of step.stepItemResults) {\r\n                        const key = `${studyId}|${stepItem.variableName}`;\r\n                        const variable = studyVars.get(key);\r\n                        if (variable) {\r\n                          variable.results.push({\r\n                            value: stepItem.value,\r\n                            date: stepItem.startDate,\r\n                            uid: taskResult.userId,\r\n                            taskResults: taskResult\r\n                          });\r\n                          studyVars.set(key, variable);\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n                // console.log(studyVars);\r\n                // Step 3: save variables in db\r\n                const studyVariables = tx.objectStore(\"StudyVariables\");\r\n                for (const variable of studyVars.values()) {\r\n                  studyVariables.put(variable);\r\n                }\r\n                // notify variable store\r\n                variableStore.set([...$variableStore, ...studyVars.values()]);\r\n\r\n                // notify study store (it's faster this way)\r\n                tx.objectStore(\"Studies\").getAll().onsuccess = e =>\r\n                  studyStore.set(e.target.result);\r\n              };\r\n\r\n              // ---------- Import task results\r\n              // check if there are any questionnaire/task results in the import file\r\n              if (\r\n                importData.hasOwnProperty(\"taskResults\") &&\r\n                importData.taskResults instanceof Array\r\n              ) {\r\n                const tx = db.transaction(\r\n                  [\r\n                    \"Users\",\r\n                    \"Demographics\",\r\n                    \"TaskResults\",\r\n                    \"StudyTasks\",\r\n                    \"StudyResponses\"\r\n                  ],\r\n                  \"readwrite\"\r\n                );\r\n\r\n                // importing questionnaire/task results\r\n                for (const taskResult of importData.taskResults) {\r\n                  // TODO: check if props exist\r\n                  const { studyId, taskId, userId } = taskResult;\r\n                  //find task to which these results belong\r\n                  const res = tx.objectStore(\"StudyTasks\").get(taskId);\r\n                  res.onsuccess = e => {\r\n                    const taskInfo = e.target.result;\r\n                    if (taskInfo.personalData === true) {\r\n                      // also import personal data into store Demographics\r\n                      const store = tx.objectStore(\"Demographics\");\r\n                      for (const step of taskResult.stepResults) {\r\n                        for (const stepItem of step.stepItemResults) {\r\n                          const data = {\r\n                            userId: userId,\r\n                            variableName: stepItem.variableName,\r\n                            taskId: taskId,\r\n                            value: stepItem.value,\r\n                            __created: new Date()\r\n                          };\r\n                          store.put(data); // replace existing data\r\n                        }\r\n                      }\r\n                    }\r\n\r\n                    // import results\r\n                    const store = tx.objectStore(\"TaskResults\");\r\n                    for (const step of taskResult.stepResults) {\r\n                      for (const stepItem of step.stepItemResults) {\r\n                        const {\r\n                          value: resultValue,\r\n                          variableName: resultVariable,\r\n                          startDate: resultDate\r\n                        } = stepItem;\r\n                        const data = {\r\n                          studyId: studyId,\r\n                          userId: userId,\r\n                          taskId: taskId,\r\n                          resultVariable,\r\n                          resultValue,\r\n                          resultDate,\r\n                          stepItem, // also store original data from import file\r\n                          __created: new Date()\r\n                        };\r\n                        store.add(data);\r\n                      }\r\n                    }\r\n                  };\r\n\r\n                  // update user table\r\n                  const store = tx.objectStore(\"Users\");\r\n                  const user = {\r\n                    userId: taskResult.userId,\r\n                    studyId: studyId,\r\n                    __created: new Date()\r\n                  };\r\n                  store.put(user);\r\n\r\n                  // add response info\r\n                  tx.objectStore(\"StudyResponses\").put(taskResult);\r\n                } // for each taskResult\r\n              } // end of task result import\r\n              //alert(`Study results for \"${study.studyName}\" were imported`);\r\n              db\r\n                .transaction(\"StudyResponses\")\r\n                .objectStore(\"StudyResponses\")\r\n                .getAll().onsuccess = e => {\r\n                responseStore.set(e.target.result);\r\n              };\r\n              db\r\n                .transaction(\"Users\")\r\n                .objectStore(\"Users\")\r\n                .getAll().onsuccess = e => {\r\n                userStore.set(e.target.result);\r\n              };\r\n            }\r\n          } catch (error) {\r\n            console.error(`Error importing ${file.name}: `, error);\r\n          }\r\n        };\r\n      }\r\n    };\r\n  });\r\n</script>\r\n\r\n<style>\r\n  input {\r\n    /* hide system input field since it's ugly can't be styled properly*/\r\n    cursor: pointer;\r\n    width: 0.1px;\r\n    height: 0.1px;\r\n    opacity: 0;\r\n    overflow: hidden;\r\n    position: absolute;\r\n    z-index: -1;\r\n  }\r\n  label {\r\n    width: 100%;\r\n    height: 100%;\r\n    min-height: 18ch;\r\n    display: grid;\r\n    grid-template-rows: 1fr 1fr;\r\n    grid-gap: 0.5rem;\r\n    justify-items: center;\r\n    background: tomato;\r\n    position: relative;\r\n    font-weight: 600;\r\n    cursor: pointer;\r\n    overflow: hidden;\r\n    /* padding: 1rem 1.25rem; */\r\n    border-radius: 0.25rem;\r\n    color: white;\r\n    box-shadow: 0 0 6px 0 rgba(0, 0, 0, 0.25);\r\n  }\r\n  figure {\r\n    align-self: flex-end;\r\n    margin: 0;\r\n  }\r\n  label:hover {\r\n    background-color: #722040;\r\n    box-shadow: 0 5px 20px 3px rgba(0, 0, 0, 0.25);\r\n  }\r\n</style>\r\n\r\n<input id=\"studyImport\" type=\"file\" multiple accept=\"application/json\" />\r\n<label for=\"studyImport\">\r\n  <figure>\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"2em\"\r\n      height=\"1.8em\"\r\n      viewBox=\"0 0 20 17\">\r\n      <path\r\n        fill=\"white\"\r\n        d=\"M10 0l-5.2 4.9h3.3v5.1h3.8v-5.1h3.3l-5.2-4.9zm9.3\r\n        11.5l-3.2-2.1h-2l3.4 2.6h-3.5c-.1 0-.2.1-.2.1l-.8\r\n        2.3h-6l-.8-2.2c-.1-.1-.1-.2-.2-.2h-3.6l3.4-2.6h-2l-3.2 2.1c-.4.3-.7 1-.6\r\n        1.5l.6 3.1c.1.5.7.9 1.2.9h16.3c.6 0 1.1-.4\r\n        1.3-.9l.6-3.1c.1-.5-.2-1.2-.7-1.5z\" />\r\n    </svg>\r\n  </figure>\r\n  <span>Import study data</span>\r\n</label>\r\n",
    "<script>\r\n  import { onMount } from \"svelte\";\r\n  import { variableStore } from \"../modules/store\";\r\n  import stat from \"../modules/simple-statistics.min\";\r\n  export let studyId;\r\n  export let dependentVariable;\r\n  let anovaChart;\r\n  let old = \"\";\r\n  let count = 0;\r\n  let minVal = 0;\r\n  let meanVal = 0;\r\n  let sd = 0;\r\n  let maxVal = 0;\r\n  const alpha = 0.05;\r\n  let ci = [0, 0];\r\n\r\n  $: if (dependentVariable !== old) {\r\n    old = dependentVariable;\r\n    if (dependentVariable) {\r\n      updateChart(dependentVariable);\r\n    }\r\n  }\r\n\r\n  function updateChart(variable) {\r\n    if (!anovaChart) return;\r\n    anovaChart.showLoading();\r\n    const [data, errorData] = getStatData(variable);\r\n    anovaChart.hideLoading();\r\n    anovaChart.setOption({\r\n      series: [\r\n        {\r\n          name: \"Availability\",\r\n          data: data\r\n        },\r\n        {\r\n          name: \"CI\",\r\n          data: errorData\r\n        }\r\n      ]\r\n    });\r\n  }\r\n  function getStatData(dependentVariable) {\r\n    if (!dependentVariable) return [[], []];\r\n    const resultsByDay = [[], [], [], [], [], [], []]; // array index -> day of week starting at 0 (monday)\r\n    const results = dependentVariable.results.map(v => v.value);\r\n    minVal = stat.min(results);\r\n    maxVal = stat.max(results);\r\n    meanVal = stat.mean(results);\r\n    count = results.length;\r\n    sd = stat.standardDeviation(results);\r\n    ci = mctad.confidenceIntervalOnTheMean(meanVal, sd, count, alpha);\r\n    for (const result of dependentVariable.results) {\r\n      const resultDate = new Date(result.date);\r\n      // 0: sunday - 6: saturday (US week format!)\r\n      // convert to 0: monday - 6 sunday\r\n      const resultDay = (+resultDate.getDay() + 6) % 7;\r\n      resultsByDay[resultDay].push(result.value);\r\n    }\r\n\r\n    const statData = [];\r\n    const errorData = [];\r\n\r\n    for (let day = 0; day < 7; ++day) {\r\n      const results = resultsByDay[day];\r\n      if (results && results.length) {\r\n        const mean = stat.mean(results);\r\n        const sd = stat.standardDeviation(results);\r\n        const n = results.length;\r\n        statData.push(mean);\r\n        if (n < 2) {\r\n          errorData.push([day, 0, 0, n, 0]);\r\n          continue;\r\n        }\r\n        errorData.push([\r\n          day,\r\n          ...mctad.confidenceIntervalOnTheMean(mean, sd, n, alpha),\r\n          n,\r\n          sd\r\n        ]);\r\n        // console.log(mean, mctad.confidenceIntervalOnTheMean(mean, sd, n, 0.05));\r\n      } else {\r\n        statData.push(0);\r\n        errorData.push([day, 0, 0, 0, 0]);\r\n      }\r\n    }\r\n    return [statData, errorData];\r\n  }\r\n\r\n  onMount(() => {\r\n    anovaChart = echarts.init(document.getElementById(\"anovaChart\"));\r\n    const [statData, errorData] = getStatData(dependentVariable);\r\n\r\n    const categoryData = [\r\n      \"Monday\",\r\n      \"Tuesday\",\r\n      \"Wednesday\",\r\n      \"Thursday\",\r\n      \"Friday\",\r\n      \"Saturday\",\r\n      \"Sunday\"\r\n    ];\r\n\r\n    function renderItem(params, api) {\r\n      var xValue = api.value(0);\r\n      var highPoint = api.coord([xValue, api.value(1)]);\r\n      var lowPoint = api.coord([xValue, api.value(2)]);\r\n      var halfWidth = api.size([1, 0])[0] * 0.05;\r\n      var style = api.style({\r\n        stroke: \"#314655\",\r\n        fill: null\r\n      });\r\n\r\n      return {\r\n        type: \"group\",\r\n        children: [\r\n          {\r\n            type: \"line\",\r\n            shape: {\r\n              x1: highPoint[0] - halfWidth,\r\n              y1: highPoint[1],\r\n              x2: highPoint[0] + halfWidth,\r\n              y2: highPoint[1]\r\n            },\r\n            style: style\r\n          },\r\n          {\r\n            type: \"line\",\r\n            shape: {\r\n              x1: highPoint[0],\r\n              y1: highPoint[1],\r\n              x2: lowPoint[0],\r\n              y2: lowPoint[1]\r\n            },\r\n            style: style\r\n          },\r\n          {\r\n            type: \"line\",\r\n            shape: {\r\n              x1: lowPoint[0] - halfWidth,\r\n              y1: lowPoint[1],\r\n              x2: lowPoint[0] + halfWidth,\r\n              y2: lowPoint[1]\r\n            },\r\n            style: style\r\n          }\r\n        ]\r\n      };\r\n    } // renderItem\r\n\r\n    const option = {\r\n      tooltip: {\r\n        trigger: \"axis\",\r\n        axisPointer: {\r\n          type: \"shadow\"\r\n        },\r\n        formatter: function(data) {\r\n          const mean = data[0].data;\r\n          const [_, left, right, n, sd] = data[1].data;\r\n          return `<table style=\"font-size:0.8rem;\">\r\n                  <tr>\r\n                    <td>Mean</td>\r\n                    <td style=\"padding-left:0.5rem;\">${mean.toFixed(4)}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>SD</td>\r\n                    <td style=\"padding-left:0.5rem;\">${sd.toFixed(4)}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>CI</td>\r\n                    <td style=\"padding-left:0.5rem;\">[${left.toFixed(\r\n                      4\r\n                    )} ; ${right.toFixed(4)}]</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>alpha</td>\r\n                    <td style=\"padding-left:0.5rem;\"> 0.05 </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>Records</td>\r\n                    <td style=\"padding-left:0.5rem;\">${n}</td>\r\n                  </tr>\r\n                  </table>`;\r\n        }\r\n      },\r\n      grid: {\r\n        left: 36,\r\n        top: 5,\r\n        right: 0,\r\n        bottom: 25\r\n      },\r\n      xAxis: {\r\n        data: categoryData\r\n      },\r\n      yAxis: {\r\n        axisLabel: {\r\n          showMaxLabel: false\r\n        },\r\n        splitLine: {\r\n          show: true,\r\n          lineStyle: {\r\n            color: \"#ddd\",\r\n            type: \"dashed\"\r\n          }\r\n        }\r\n      },\r\n      series: [\r\n        {\r\n          type: \"bar\",\r\n          name: \"Availability\",\r\n          data: statData,\r\n          itemStyle: {\r\n            normal: {\r\n              color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n                { offset: 0, color: \"#a4b8c9\" },\r\n                { offset: 0.85, color: \"#a4b8c9\" },\r\n                { offset: 1, color: \"#9caebe\" }\r\n              ])\r\n            }\r\n          },\r\n          label: {\r\n            normal: {\r\n              show: true,\r\n              color: \"#333\",\r\n              formatter: function(value, idx) {\r\n                return value.data.toFixed(2);\r\n              }\r\n            }\r\n          }\r\n        },\r\n        {\r\n          type: \"custom\",\r\n          name: \"CI\",\r\n          itemStyle: {\r\n            normal: {\r\n              borderWidth: 1.5\r\n            }\r\n          },\r\n          renderItem: renderItem,\r\n          encode: {\r\n            x: 0,\r\n            y: [1, 2]\r\n          },\r\n          data: errorData,\r\n          z: 10\r\n        }\r\n      ]\r\n    };\r\n    anovaChart.setOption(option);\r\n\r\n    function resizeChart() {\r\n      if (anovaChart !== null && !anovaChart.isDisposed()) {\r\n        anovaChart.resize();\r\n      }\r\n    }\r\n    window.addEventListener(\"resize\", resizeChart);\r\n\r\n    return () => {\r\n      // clean up after component unmounts\r\n      anovaChart.dispose();\r\n      anovaChart = null;\r\n      window.removeEventListener(\"resize\", resizeChart);\r\n    };\r\n  });\r\n</script>\r\n\r\n<style>\r\n  #anovaChart {\r\n    width: 100%;\r\n    height: 100%;\r\n    padding: 0;\r\n    margin: 0;\r\n  }\r\n\r\n  .container {\r\n    position: relative;\r\n    display: grid;\r\n    grid-template-columns: auto min-content;\r\n    grid-gap: 1rem;\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n  table {\r\n    width: 37ch;\r\n    border-collapse: collapse;\r\n    font-size: 0.7rem;\r\n  }\r\n  td {\r\n    padding: 0.8em 0;\r\n    border-bottom: 1px solid #ddd;\r\n  }\r\n  tr:hover {\r\n    background-color: #f5f5f5;\r\n  }\r\n</style>\r\n\r\n<div class=\"container\">\r\n  <div id=\"anovaChart\" />\r\n  <div class=\"statTable\">\r\n    <table>\r\n      <tr>\r\n        <td>Min - Max:</td>\r\n        <td>{minVal} - {maxVal}</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Mean:</td>\r\n        <td>{meanVal.toFixed(4)}</td>\r\n      </tr>\r\n      <tr>\r\n        <td>SD:</td>\r\n        <td>{sd.toFixed(4)}</td>\r\n      </tr>\r\n      <tr>\r\n        <td>CI:</td>\r\n        <td>[ {ci[0].toFixed(4)} ; {ci[1].toFixed(4)} ] (a=0.05)</td>\r\n      </tr>\r\n    </table>\r\n  </div>\r\n</div>\r\n",
    "<script>\r\n  import { onMount } from \"svelte\";\r\n\r\n  onMount(() => {\r\n    let weekChart = echarts.init(document.getElementById(\"weekChart\"));\r\n\r\n    const hours = [\r\n      \"0:00\",\r\n      \"1:00\",\r\n      \"2:00\",\r\n      \"3:00\",\r\n      \"4:00\",\r\n      \"5:00\",\r\n      \"6:00\",\r\n      \"7:00\",\r\n      \"8:00\",\r\n      \"9:00\",\r\n      \"10:00\",\r\n      \"11:00\",\r\n      \"12:00\",\r\n      \"1:00\",\r\n      \"2:00\",\r\n      \"3:00\",\r\n      \"4:00\",\r\n      \"5:00\",\r\n      \"6:00\",\r\n      \"7:00\",\r\n      \"8:00\",\r\n      \"9:00\",\r\n      \"10:00\",\r\n      \"11:00\"\r\n    ];\r\n    const days = [\r\n      \"Saturday\",\r\n      \"Friday\",\r\n      \"Thursday\",\r\n      \"Wednesday\",\r\n      \"Tuesday\",\r\n      \"Monday\",\r\n      \"Sunday\"\r\n    ];\r\n\r\n    const data = [\r\n      [0, 0, 5],\r\n      [0, 1, 1],\r\n      [0, 2, 0],\r\n      [0, 3, 0],\r\n      [0, 4, 0],\r\n      [0, 5, 0],\r\n      [0, 6, 0],\r\n      [0, 7, 0],\r\n      [0, 8, 0],\r\n      [0, 9, 0],\r\n      [0, 10, 0],\r\n      [0, 11, 2],\r\n      [0, 12, 4],\r\n      [0, 13, 1],\r\n      [0, 14, 1],\r\n      [0, 15, 3],\r\n      [0, 16, 4],\r\n      [0, 17, 6],\r\n      [0, 18, 4],\r\n      [0, 19, 4],\r\n      [0, 20, 3],\r\n      [0, 21, 3],\r\n      [0, 22, 2],\r\n      [0, 23, 5],\r\n      [1, 0, 7],\r\n      [1, 1, 0],\r\n      [1, 2, 0],\r\n      [1, 3, 0],\r\n      [1, 4, 0],\r\n      [1, 5, 0],\r\n      [1, 6, 0],\r\n      [1, 7, 0],\r\n      [1, 8, 0],\r\n      [1, 9, 0],\r\n      [1, 10, 5],\r\n      [1, 11, 2],\r\n      [1, 12, 2],\r\n      [1, 13, 6],\r\n      [1, 14, 9],\r\n      [1, 15, 11],\r\n      [1, 16, 6],\r\n      [1, 17, 7],\r\n      [1, 18, 8],\r\n      [1, 19, 12],\r\n      [1, 20, 5],\r\n      [1, 21, 5],\r\n      [1, 22, 7],\r\n      [1, 23, 2],\r\n      [2, 0, 1],\r\n      [2, 1, 1],\r\n      [2, 2, 0],\r\n      [2, 3, 0],\r\n      [2, 4, 0],\r\n      [2, 5, 0],\r\n      [2, 6, 0],\r\n      [2, 7, 0],\r\n      [2, 8, 0],\r\n      [2, 9, 0],\r\n      [2, 10, 3],\r\n      [2, 11, 2],\r\n      [2, 12, 1],\r\n      [2, 13, 9],\r\n      [2, 14, 8],\r\n      [2, 15, 10],\r\n      [2, 16, 6],\r\n      [2, 17, 5],\r\n      [2, 18, 5],\r\n      [2, 19, 5],\r\n      [2, 20, 7],\r\n      [2, 21, 4],\r\n      [2, 22, 2],\r\n      [2, 23, 4],\r\n      [3, 0, 7],\r\n      [3, 1, 3],\r\n      [3, 2, 0],\r\n      [3, 3, 0],\r\n      [3, 4, 0],\r\n      [3, 5, 0],\r\n      [3, 6, 0],\r\n      [3, 7, 0],\r\n      [3, 8, 1],\r\n      [3, 9, 0],\r\n      [3, 10, 5],\r\n      [3, 11, 4],\r\n      [3, 12, 7],\r\n      [3, 13, 14],\r\n      [3, 14, 13],\r\n      [3, 15, 12],\r\n      [3, 16, 9],\r\n      [3, 17, 5],\r\n      [3, 18, 5],\r\n      [3, 19, 10],\r\n      [3, 20, 6],\r\n      [3, 21, 4],\r\n      [3, 22, 4],\r\n      [3, 23, 1],\r\n      [4, 0, 1],\r\n      [4, 1, 3],\r\n      [4, 2, 0],\r\n      [4, 3, 0],\r\n      [4, 4, 0],\r\n      [4, 5, 1],\r\n      [4, 6, 0],\r\n      [4, 7, 0],\r\n      [4, 8, 0],\r\n      [4, 9, 2],\r\n      [4, 10, 4],\r\n      [4, 11, 4],\r\n      [4, 12, 2],\r\n      [4, 13, 4],\r\n      [4, 14, 4],\r\n      [4, 15, 14],\r\n      [4, 16, 12],\r\n      [4, 17, 1],\r\n      [4, 18, 8],\r\n      [4, 19, 5],\r\n      [4, 20, 3],\r\n      [4, 21, 7],\r\n      [4, 22, 3],\r\n      [4, 23, 0],\r\n      [5, 0, 2],\r\n      [5, 1, 1],\r\n      [5, 2, 0],\r\n      [5, 3, 3],\r\n      [5, 4, 0],\r\n      [5, 5, 0],\r\n      [5, 6, 0],\r\n      [5, 7, 0],\r\n      [5, 8, 2],\r\n      [5, 9, 0],\r\n      [5, 10, 4],\r\n      [5, 11, 1],\r\n      [5, 12, 5],\r\n      [5, 13, 10],\r\n      [5, 14, 5],\r\n      [5, 15, 7],\r\n      [5, 16, 11],\r\n      [5, 17, 6],\r\n      [5, 18, 0],\r\n      [5, 19, 5],\r\n      [5, 20, 3],\r\n      [5, 21, 4],\r\n      [5, 22, 2],\r\n      [5, 23, 0],\r\n      [6, 0, 1],\r\n      [6, 1, 0],\r\n      [6, 2, 0],\r\n      [6, 3, 0],\r\n      [6, 4, 0],\r\n      [6, 5, 0],\r\n      [6, 6, 0],\r\n      [6, 7, 0],\r\n      [6, 8, 0],\r\n      [6, 9, 0],\r\n      [6, 10, 1],\r\n      [6, 11, 0],\r\n      [6, 12, 2],\r\n      [6, 13, 1],\r\n      [6, 14, 3],\r\n      [6, 15, 4],\r\n      [6, 16, 0],\r\n      [6, 17, 0],\r\n      [6, 18, 0],\r\n      [6, 19, 0],\r\n      [6, 20, 1],\r\n      [6, 21, 2],\r\n      [6, 22, 2],\r\n      [6, 23, 6]\r\n    ];\r\n\r\n    const option = {\r\n      tooltip: {\r\n        position: \"top\"\r\n      },\r\n      title: [],\r\n      singleAxis: [],\r\n      series: []\r\n    };\r\n\r\n    echarts.util.each(days, function(day, idx) {\r\n      option.title.push({\r\n        textBaseline: \"middle\",\r\n        top: ((idx + 0.5) * 96) / 7 + \"%\",\r\n        text: day,\r\n        textStyle: {\r\n          color: \"#333\",\r\n          fontSize: 12,\r\n          fontWeight: 300\r\n        }\r\n      });\r\n      option.singleAxis.push({\r\n        left: 100,\r\n        type: \"category\",\r\n        boundaryGap: false,\r\n        data: hours,\r\n        top: (idx * 95) / 7 + 5 + \"%\",\r\n        height: 100 / 7 - 10 + \"%\",\r\n        axisLabel: {\r\n          interval: 2,\r\n          color: \"#333\",\r\n          fontSize: 10,\r\n          fontWeight: 300\r\n        }\r\n      });\r\n      option.series.push({\r\n        singleAxisIndex: idx,\r\n        coordinateSystem: \"singleAxis\",\r\n        type: \"scatter\",\r\n        data: [],\r\n        symbolSize: function(dataItem) {\r\n          return dataItem[1] * 2;\r\n        }\r\n      });\r\n    });\r\n\r\n    echarts.util.each(data, function(dataItem) {\r\n      option.series[dataItem[0]].data.push([dataItem[1], dataItem[2]]);\r\n    });\r\n\r\n    weekChart.setOption(option);\r\n\r\n    function resizeChart() {\r\n      if (weekChart !== null && !weekChart.isDisposed()) {\r\n        weekChart.resize();\r\n      }\r\n    }\r\n    window.addEventListener(\"resize\", resizeChart);\r\n\r\n    return () => {\r\n      // clean up after component unmounts\r\n      weekChart.dispose();\r\n      weekChart = null;\r\n      window.removeEventListener(\"resize\", resizeChart);\r\n    };\r\n  });\r\n</script>\r\n\r\n<style>\r\n  #weekChart {\r\n    width: 100%;\r\n    height: 100%;\r\n    padding: 0;\r\n    margin: 0;\r\n  }\r\n</style>\r\n\r\n<div id=\"weekChart\" />\r\n",
    "<script>\r\n  import { onMount } from \"svelte\";\r\n\r\n  onMount(() => {\r\n    let BDAChart = echarts.init(document.getElementById(\"BDAChart\"));\r\n    const option = {\r\n      grid: {\r\n        left: 36,\r\n        top: 30,\r\n        right: 10,\r\n        bottom: 30\r\n      },\r\n      legend: { show: true },\r\n      xAxis: {\r\n        type: \"category\",\r\n        data: [\"Before\", \"During\", \"After\"]\r\n      },\r\n      yAxis: {\r\n        axisLabel: {\r\n          showMaxLabel: true\r\n        },\r\n        name: \"Availability\"\r\n      },\r\n      series: [\r\n        {\r\n          name: \"Work\",\r\n          data: [4.6, 5.8, 4.9],\r\n          type: \"line\",\r\n          symbol: \"triangle\",\r\n          symbolSize: 10\r\n        },\r\n        {\r\n          name: \"Leisure\",\r\n          data: [3.6, 6.8, 4.9],\r\n          type: \"line\",\r\n          symbol: \"circle\",\r\n          symbolSize: 10\r\n        },\r\n        {\r\n          name: \"Television\",\r\n          data: [3.2, 2.8, 1.1],\r\n          type: \"line\",\r\n          symbol: \"square\",\r\n          symbolSize: 10\r\n        }\r\n      ]\r\n    };\r\n\r\n    BDAChart.setOption(option);\r\n\r\n    function resizeChart() {\r\n      if (BDAChart !== null && !BDAChart.isDisposed()) {\r\n        BDAChart.resize();\r\n      }\r\n    }\r\n    window.addEventListener(\"resize\", resizeChart);\r\n\r\n    return () => {\r\n      // clean up after component unmounts\r\n      BDAChart.dispose();\r\n      BDAChart = null;\r\n      window.removeEventListener(\"resize\", resizeChart);\r\n    };\r\n  });\r\n</script>\r\n\r\n<style>\r\n  #BDAChart {\r\n    width: 95%;\r\n    height: 100%;\r\n    padding: 0;\r\n    margin: 0;\r\n  }\r\n</style>\r\n\r\n<div id=\"BDAChart\" />\r\n",
    "<script>\r\n  import { onMount } from \"svelte\";\r\n  let labelFontSize = window.devicePixelRatio <= 1 ? 18 : 12;\r\n  onMount(() => {\r\n    let ContextPieChart = echarts.init(\r\n      document.getElementById(\"ContextPieChart\")\r\n    );\r\n    const option = {\r\n      backgroundColor: \"#fff\",\r\n\r\n      tooltip: {\r\n        trigger: \"item\",\r\n        formatter: \"{a} <br/>{b} : {c} ({d}%)\"\r\n      },\r\n\r\n      visualMap: {\r\n        show: false,\r\n        min: 0,\r\n        max: 60,\r\n        inRange: {\r\n          colorLightness: [0, 1]\r\n        }\r\n      },\r\n      series: [\r\n        {\r\n          name: \"Context Activities\",\r\n          type: \"pie\",\r\n          radius: \"69%\",\r\n          center: [\"50%\", \"50%\"],\r\n          data: [\r\n            { value: 43, name: \"Television\" },\r\n            { value: 11, name: \"Sports\" },\r\n            { value: 37, name: \"Work\" },\r\n            { value: 23, name: \"Leisure\" },\r\n            { value: 5, name: \"Sleep\" }\r\n          ].sort(function(a, b) {\r\n            return a.value - b.value;\r\n          }),\r\n          roseType: \"radius\",\r\n          label: {\r\n            normal: {\r\n              textStyle: {\r\n                fontSize: labelFontSize,\r\n                color: \"#333\"\r\n              }\r\n            }\r\n          },\r\n          labelLine: {\r\n            normal: {\r\n              lineStyle: {\r\n                color: \"#333\"\r\n              },\r\n              smooth: 0.2,\r\n              length: 10,\r\n              length2: 20\r\n            }\r\n          },\r\n          itemStyle: {\r\n            normal: {\r\n              color: \"#c23531\",\r\n              shadowBlur: 20,\r\n              shadowColor: \"rgba(0, 0, 0, 0.5)\"\r\n            }\r\n          },\r\n\r\n          animationType: \"scale\",\r\n          animationEasing: \"elasticOut\",\r\n          animationDelay: function(idx) {\r\n            return Math.random() * 200;\r\n          }\r\n        }\r\n      ]\r\n    };\r\n\r\n    ContextPieChart.setOption(option);\r\n\r\n    function resizeChart() {\r\n      if (ContextPieChart !== null && !ContextPieChart.isDisposed()) {\r\n        ContextPieChart.resize();\r\n      }\r\n    }\r\n    window.addEventListener(\"resize\", resizeChart);\r\n\r\n    return () => {\r\n      // clean up after component unmounts\r\n      ContextPieChart.dispose();\r\n      ContextPieChart = null;\r\n      window.removeEventListener(\"resize\", resizeChart);\r\n    };\r\n  });\r\n</script>\r\n\r\n<style>\r\n  #ContextPieChart {\r\n    width: 100%;\r\n    height: 100%;\r\n    padding: 0;\r\n    margin: 0;\r\n  }\r\n</style>\r\n\r\n<div id=\"ContextPieChart\" />\r\n",
    "<script>\r\n  import { formatDate } from \"../modules/utils\";\r\n  const items = [];\r\n  for (let index = 0; index < 5; index++) {\r\n    items.push(~~(Math.random() * 9));\r\n  }\r\n  items = items;\r\n</script>\r\n\r\n<style>\r\n  table {\r\n    position: relative;\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n    font-size: 0.7rem;\r\n  }\r\n  td {\r\n    border-bottom: 1px solid #ddd;\r\n  }\r\n  tr:hover {\r\n    background-color: #f5f5f5;\r\n  }\r\n  th {\r\n    padding-top: 1rem;\r\n    text-align: left;\r\n    font-weight: 600;\r\n  }\r\n  img {\r\n    box-shadow: 0 0 6px 0 rgba(0, 0, 0, 0.25);\r\n  }\r\n  thead {\r\n    position: sticky;\r\n    top: -15px;\r\n    background-color: white;\r\n  }\r\n</style>\r\n\r\nUploaded Images:\r\n<table>\r\n  <thead>\r\n    <tr>\r\n      <th>Image</th>\r\n      <th>Date</th>\r\n      <th>Availability</th>\r\n    </tr>\r\n  </thead>\r\n  {#each items as val}\r\n    <tr>\r\n      <td style=\"width:250px;\">\r\n        <img src=\"https://unsplash.it/15{val}/15{val}\" alt={val} />\r\n      </td>\r\n      <td>{formatDate(new Date(), true, false)}</td>\r\n      <td>{val}</td>\r\n    </tr>\r\n  {/each}\r\n</table>\r\n",
    "<script>\r\n  import { onMount } from \"svelte\";\r\n  import { variableStore } from \"../modules/store\";\r\n  import MainChartSummary from \"./MainChartSummary.svelte\";\r\n  import Anova from \"./Anova.svelte\";\r\n  import stat from \"../modules/simple-statistics.min\";\r\n\r\n  export let studyId;\r\n\r\n  let mainChart;\r\n  let dvs = [];\r\n  let minVal,\r\n    maxVal = 0;\r\n  let dependentVariable;\r\n\r\n  function selectHandler() {\r\n    updateChart(dependentVariable);\r\n  }\r\n\r\n  function updateChart(variable) {\r\n    if (!mainChart) return;\r\n    mainChart.showLoading();\r\n    const data = getStatData(variable);\r\n    mainChart.hideLoading();\r\n    mainChart.setOption({\r\n      visualMap: {\r\n        min: minVal,\r\n        max: maxVal\r\n      },\r\n      legend: {\r\n        show: true,\r\n        data: [dependentVariable.variableName],\r\n        left: \"center\"\r\n      },\r\n      series: [\r\n        {\r\n          name: dependentVariable.variableName,\r\n          data: data\r\n        }\r\n      ]\r\n    });\r\n  }\r\n\r\n  function getStatData(dependentVariable) {\r\n    const resultsByDayAndHour = [\r\n      new Map(),\r\n      new Map(),\r\n      new Map(),\r\n      new Map(),\r\n      new Map(),\r\n      new Map(),\r\n      new Map()\r\n    ];\r\n    minVal = stat.min(dependentVariable.results.map(v => v.value));\r\n    maxVal = stat.max(dependentVariable.results.map(v => v.value));\r\n    dependentVariable.variableName = dependentVariable.variableLabel;\r\n    for (const result of dependentVariable.results) {\r\n      const resultDate = new Date(result.date);\r\n      // 0: sunday - 6: saturday (US week format!)\r\n      // convert to 0: monday - 6 sunday\r\n      const resultDay = (+resultDate.getDay() + 6) % 7;\r\n      const hour = resultDate.getHours();\r\n      const rs = resultsByDayAndHour[resultDay].get(hour) || [];\r\n      rs.push(result.value);\r\n      resultsByDayAndHour[resultDay].set(hour, rs);\r\n    }\r\n\r\n    const statData = [];\r\n    for (const day in resultsByDayAndHour) {\r\n      for (const [hour, results] of resultsByDayAndHour[day]) {\r\n        statData.push([\r\n          +day + 1, // start at 1 for monday, cast to int and do not concatenate strings (WTF Javascript?!)\r\n          hour,\r\n          stat.mean(results),\r\n          stat.standardDeviation(results),\r\n          results.length\r\n        ]);\r\n      }\r\n    }\r\n    return statData;\r\n  }\r\n\r\n  onMount(() => {\r\n    mainChart = echarts.init(document.getElementById(\"mainChart\"));\r\n    const numericVariables = $variableStore.filter(\r\n      v =>\r\n        v.studyId === studyId &&\r\n        v.isDemographic === false &&\r\n        v.measure === \"scale\"\r\n    );\r\n    dvs = numericVariables;\r\n    let statData = [];\r\n    if (numericVariables && numericVariables.length) {\r\n      dependentVariable = numericVariables[0];\r\n      statData = getStatData(dependentVariable);\r\n    }\r\n\r\n    const days = [\r\n      \"\",\r\n      \"Monday\",\r\n      \"Tuesday\",\r\n      \"Wednesday\",\r\n      \"Thursday\",\r\n      \"Friday\",\r\n      \"Saturday\",\r\n      \"Sunday\"\r\n    ];\r\n\r\n    const option = {\r\n      dataZoom: {\r\n        type: \"inside\",\r\n        yAxisIndex: [0],\r\n        filterMode: \"filter\"\r\n      },\r\n      visualMap: {\r\n        right: 10,\r\n        top: \"25%\",\r\n        dimension: 2,\r\n        min: minVal,\r\n        max: maxVal,\r\n        itemWidth: 15,\r\n        itemHeight: 100,\r\n        calculable: true,\r\n        precision: 0.1,\r\n        text: [\"Mean\"],\r\n        textGap: 10,\r\n        textStyle: {\r\n          color: \"#333\"\r\n        },\r\n        outOfRange: {\r\n          color: [\"rgba(0,0,0,0.1)\"]\r\n        }\r\n      },\r\n      legend: {\r\n        show: true,\r\n        data: [dependentVariable.variableName],\r\n        left: \"center\"\r\n      },\r\n      tooltip: {\r\n        position: \"top\",\r\n        formatter: function(d) {\r\n          return `<table style=\"font-size:0.8rem;\">\r\n                  <tr>\r\n                    <td colspan=2>${days[d.value[0]]}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>Timeslot</td>\r\n                    <td style=\"padding-left:0.5rem;\">[${d.value[1]}:00 - ${+d\r\n            .value[1] + 1}:00)</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>Mean</td>\r\n                    <td style=\"padding-left:0.5rem;\">${d.value[2].toFixed(\r\n                      4\r\n                    )}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>SD</td>\r\n                    <td style=\"padding-left:0.5rem;\">${d.value[3].toFixed(\r\n                      4\r\n                    )}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>Responses</td>\r\n                    <td style=\"padding-left:0.5rem;\">${d.value[4]}</td>\r\n                  </tr>\r\n                  </table>`;\r\n        }\r\n      },\r\n      grid: {\r\n        top: 40,\r\n        left: 2,\r\n        bottom: 10,\r\n        right: 110,\r\n        containLabel: true\r\n      },\r\n      xAxis: {\r\n        type: \"category\",\r\n        boundaryGap: false,\r\n        data: days,\r\n        splitLine: {\r\n          show: false,\r\n          lineStyle: {\r\n            color: \"#999\",\r\n            type: \"dashed\"\r\n          }\r\n        },\r\n        axisLine: {\r\n          show: true\r\n        }\r\n      },\r\n      yAxis: {\r\n        splitLine: {\r\n          show: true,\r\n          lineStyle: {\r\n            color: \"#ddd\",\r\n            type: \"dashed\"\r\n          }\r\n        },\r\n        type: \"value\",\r\n        boundaryGap: false,\r\n        max: 24,\r\n        name: \"Time of day\",\r\n        axisLabel: {\r\n          formatter: function(value, idx) {\r\n            let hour = ~~value;\r\n            let minutes = ~~((value - hour) * 60);\r\n            hour = hour < 10 ? \"0\" + hour : hour;\r\n            minutes = minutes < 10 ? \"0\" + minutes : minutes;\r\n\r\n            return `${hour}:${minutes}`;\r\n          }\r\n        },\r\n        splitNumber: 8\r\n      },\r\n      series: [\r\n        {\r\n          name: dependentVariable.variableName,\r\n          type: \"scatter\",\r\n          symbolSize: function(val) {\r\n            return ((val[2] - minVal) / (maxVal - minVal)) * 24 + 5;\r\n          },\r\n          data: statData,\r\n          animationDelay: function(idx) {\r\n            return idx * 5;\r\n          }\r\n        }\r\n      ]\r\n    };\r\n\r\n    // use configuration item and data specified to show chart\r\n    mainChart.setOption(option);\r\n\r\n    function resizeChart() {\r\n      if (mainChart !== null && !mainChart.isDisposed()) {\r\n        mainChart.resize();\r\n      }\r\n    }\r\n    window.addEventListener(\"resize\", resizeChart);\r\n\r\n    return () => {\r\n      // clean up after component unmounts\r\n      mainChart.dispose();\r\n      mainChart = null;\r\n      window.removeEventListener(\"resize\", resizeChart);\r\n    };\r\n  });\r\n\r\n  let selectColor;\r\n</script>\r\n\r\n<style>\r\n  .container {\r\n    position: relative;\r\n    display: grid;\r\n    grid-template-rows: min-content auto;\r\n    width: 100%;\r\n    height: 100%;\r\n    margin: 0;\r\n    padding: 0;\r\n    grid-gap: 1rem;\r\n  }\r\n  .filter {\r\n    font-size: 0.8rem;\r\n    padding: 0;\r\n  }\r\n  .charts {\r\n    display: grid;\r\n    grid-template-columns: 2fr minmax(120px, 0.5fr);\r\n    grid-template-rows: 2fr 1fr;\r\n  }\r\n  select {\r\n    margin-right: 1rem;\r\n  }\r\n  .anova {\r\n    grid-column: 1/3;\r\n  }\r\n</style>\r\n\r\n<div class=\"container\">\r\n  <div class=\"filter\">\r\n    Variable:\r\n    <select\r\n      name=\"dv\"\r\n      id=\"dv\"\r\n      bind:value={dependentVariable}\r\n      on:change={selectHandler}>\r\n      {#each dvs as dv}\r\n        <option value={dv}>{dv.variableLabel}</option>\r\n      {/each}\r\n    </select>\r\n    <!-- Colour is:\r\n    <select name=\"color\" id=\"color\" bind:value={selectColor}>\r\n      <option value=\"0\">not selected</option>\r\n    </select> -->\r\n  </div>\r\n  <div class=\"charts\">\r\n    <div id=\"mainChart\" style=\"width:100%; height:100%\" />\r\n    <MainChartSummary {studyId} {dependentVariable} />\r\n    <div class=\"anova\">\r\n      <Anova {studyId} {dependentVariable} />\r\n    </div>\r\n  </div>\r\n</div>\r\n",
    "<script>\r\n  import { onMount } from \"svelte\";\r\n  onMount(() => {\r\n    let sherlockChart = echarts.init(document.getElementById(\"sherlockChart\"));\r\n    const dataAll = [\r\n      [\r\n        [10.0, 8.04],\r\n        [8.0, 6.95],\r\n        [13.0, 7.58],\r\n        [9.0, 8.81],\r\n        [11.0, 8.33],\r\n        [14.0, 9.96],\r\n        [6.0, 7.24],\r\n        [4.0, 4.26],\r\n        [12.0, 10.84],\r\n        [7.0, 4.82],\r\n        [5.0, 5.68]\r\n      ],\r\n      [\r\n        [10.0, 9.14],\r\n        [8.0, 8.14],\r\n        [13.0, 8.74],\r\n        [9.0, 8.77],\r\n        [11.0, 9.26],\r\n        [14.0, 8.1],\r\n        [6.0, 6.13],\r\n        [4.0, 3.1],\r\n        [12.0, 9.13],\r\n        [7.0, 7.26],\r\n        [5.0, 4.74]\r\n      ],\r\n      [\r\n        [10.0, 7.46],\r\n        [8.0, 6.77],\r\n        [13.0, 12.74],\r\n        [9.0, 7.11],\r\n        [11.0, 7.81],\r\n        [14.0, 8.84],\r\n        [6.0, 6.08],\r\n        [4.0, 5.39],\r\n        [12.0, 8.15],\r\n        [7.0, 6.42],\r\n        [5.0, 5.73]\r\n      ],\r\n      [\r\n        [8.0, 6.58],\r\n        [8.0, 5.76],\r\n        [8.0, 7.71],\r\n        [8.0, 8.84],\r\n        [8.0, 8.47],\r\n        [8.0, 7.04],\r\n        [8.0, 5.25],\r\n        [19.0, 12.5],\r\n        [8.0, 5.56],\r\n        [8.0, 7.91],\r\n        [8.0, 6.89]\r\n      ]\r\n    ];\r\n\r\n    const markLineOpt = {\r\n      animation: false,\r\n      label: {\r\n        normal: {\r\n          formatter: \"y = 0.5 * x + 3\",\r\n          textStyle: {\r\n            align: \"right\"\r\n          }\r\n        }\r\n      },\r\n      lineStyle: {\r\n        normal: {\r\n          type: \"solid\"\r\n        }\r\n      },\r\n      tooltip: {\r\n        formatter: \"y = 0.5 * x + 3\"\r\n      },\r\n      data: [\r\n        [\r\n          {\r\n            coord: [0, 3],\r\n            symbol: \"none\"\r\n          },\r\n          {\r\n            coord: [20, 13],\r\n            symbol: \"none\"\r\n          }\r\n        ]\r\n      ]\r\n    };\r\n\r\n    const option = {\r\n      grid: [\r\n        { x: \"10%\", y: \"7%\", width: \"32%\", height: \"25%\" },\r\n        { x2: \"7%\", y: \"7%\", width: \"32%\", height: \"25%\" },\r\n        { x: \"10%\", y2: \"27%\", width: \"32%\", height: \"25%\" },\r\n        { x2: \"7%\", y2: \"27%\", width: \"32%\", height: \"25%\" }\r\n      ],\r\n      tooltip: {\r\n        formatter: \"Group {a}: ({c})\"\r\n      },\r\n      xAxis: [\r\n        {\r\n          gridIndex: 0,\r\n          min: 0,\r\n          max: 20,\r\n          splitLine: {\r\n            show: false\r\n          }\r\n        },\r\n        {\r\n          gridIndex: 1,\r\n          min: 0,\r\n          max: 20,\r\n          splitLine: {\r\n            show: false\r\n          }\r\n        },\r\n        {\r\n          gridIndex: 2,\r\n          min: 0,\r\n          max: 20,\r\n          splitLine: {\r\n            show: false\r\n          }\r\n        },\r\n        {\r\n          gridIndex: 3,\r\n          min: 0,\r\n          max: 20,\r\n          splitLine: {\r\n            show: false\r\n          }\r\n        }\r\n      ],\r\n      yAxis: [\r\n        {\r\n          gridIndex: 0,\r\n          min: 0,\r\n          max: 15,\r\n          name: \"***\",\r\n          nameGap: 0,\r\n          nameTextStyle: {\r\n            color: \"black\",\r\n            fontSize: 16\r\n          }\r\n        },\r\n        {\r\n          gridIndex: 1,\r\n          min: 0,\r\n          max: 15,\r\n          name: \"**\",\r\n          nameGap: 0,\r\n          nameTextStyle: {\r\n            color: \"black\",\r\n            fontSize: 16\r\n          }\r\n        },\r\n        {\r\n          gridIndex: 2,\r\n          min: 0,\r\n          max: 15,\r\n          name: \"**\",\r\n          nameGap: 0,\r\n          nameTextStyle: {\r\n            color: \"black\",\r\n            fontSize: 16\r\n          }\r\n        },\r\n        {\r\n          gridIndex: 3,\r\n          min: 0,\r\n          max: 15,\r\n          name: \"*\",\r\n          nameGap: 0,\r\n          nameTextStyle: {\r\n            color: \"black\",\r\n            fontSize: 16\r\n          }\r\n        }\r\n      ],\r\n      series: [\r\n        {\r\n          name: \"I\",\r\n          type: \"scatter\",\r\n          xAxisIndex: 0,\r\n          yAxisIndex: 0,\r\n          data: dataAll[0],\r\n          markLine: markLineOpt\r\n        },\r\n        {\r\n          name: \"II\",\r\n          type: \"scatter\",\r\n          xAxisIndex: 1,\r\n          yAxisIndex: 1,\r\n          data: dataAll[1],\r\n          markLine: markLineOpt\r\n        },\r\n        {\r\n          name: \"III\",\r\n          type: \"scatter\",\r\n          xAxisIndex: 2,\r\n          yAxisIndex: 2,\r\n          data: dataAll[2],\r\n          markLine: markLineOpt\r\n        },\r\n        {\r\n          name: \"IV\",\r\n          type: \"scatter\",\r\n          xAxisIndex: 3,\r\n          yAxisIndex: 3,\r\n          data: dataAll[3],\r\n          markLine: markLineOpt\r\n        }\r\n      ]\r\n    };\r\n    sherlockChart.setOption(option);\r\n\r\n    function resizeChart() {\r\n      if (sherlockChart !== null && !sherlockChart.isDisposed()) {\r\n        sherlockChart.resize();\r\n      }\r\n    }\r\n    window.addEventListener(\"resize\", resizeChart);\r\n\r\n    return () => {\r\n      // clean up after component unmounts\r\n      sherlockChart.dispose();\r\n      sherlockChart = null;\r\n      window.removeEventListener(\"resize\", resizeChart);\r\n    };\r\n  });\r\n</script>\r\n\r\n<style>\r\n  #sherlockChart {\r\n    width: 100%;\r\n    height: 80%;\r\n    padding: 0;\r\n    margin: 0;\r\n  }\r\n  #sherlockHeader {\r\n    /* box-shadow: 0px 0px 1px black; */\r\n    display: grid;\r\n    grid-template-columns: auto 1fr;\r\n    align-items: center;\r\n    margin-bottom: 0.5em;\r\n  }\r\n</style>\r\n\r\n<div id=\"sherlockHeader\">\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    xmlns:xlink=\"http://www.w3.org/1999/xlink\"\r\n    width=\"2.5em\"\r\n    height=\"2.5em\"\r\n    viewBox=\"0 0 1200 1200\">\r\n    <g>\r\n      <g transform=\"translate(600 600) scale(-0.69 0.69) translate(-600 -600)\">\r\n        <svg\r\n          fill=\"#333\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          xmlns:xlink=\"http://www.w3.org/1999/xlink\"\r\n          version=\"1.1\"\r\n          x=\"0px\"\r\n          y=\"0px\"\r\n          viewBox=\"-909 491 100 100\"\r\n          style=\"enable-background:new -909 491 100 100;\"\r\n          xml:space=\"preserve\">\r\n          <path\r\n            d=\"M-823.5,558.3c-4.8-0.3-4.4,1.6-4.4,1.6l0.2,4.6c0,0,0,2.4-1.4,2.3s-1.8-2.8-1.8-2.8s-1.1-4.6-1.1-4.6\r\n            c0-0.1,0.1-0.3,0.1-0.4c0.1-0.3,0.1-0.7,0-1c-0.1-0.7-0.2-1.5-0.7-2.1c0,0-0.8-0.5-0.8-0.4c-0.5-3.4-2.2-6.8-5.7-7.8\r\n            c-0.2-0.1-2.5-0.5-3.6-0.7c0.1-0.3,0.3-0.6,0.4-0.9c0.3-1.2-0.4-2.3-0.8-3.3c-0.3-1-0.2-1.9,1-2c1.1-0.1,3.1,1,3.7,0.8\r\n            c0.7-0.1,1.5-0.7,1.5-1.5s-1.2-2.5-1.2-2.5s-1.6-3.2-2.1-4.6c-0.5-1.4-2.3-2.7-2.3-2.7s-1.8-1.3-1.6-2.2c0.2-0.9,0.9-1.2,1.2-2.1\r\n            c1,0.1,2.1,0.4,2.9,0.5c2.9,0.4,6.7,1.2,9,0.7c0,0,1.2-0.1,0-1c-1.2-0.9-4.1-3.7-5-4.7s-4.1-3.1-4.7-4.4c-1.9-3.9-2.4-8.6-5.6-11.9\r\n            c-2.3-2.4-5.2-4.3-8.2-5.6c1.1,0.2,2.2,0.3,3.3,0.3c0.1,0,0.3,0,0.4,0l0-0.9c-2.8,0.1-6-0.6-8.3-1.2c0.5,0,1-0.1,1.6-0.3\r\n            c1-0.3,2.9-1.1,2.5-2.5c-0.5-1.9-3.8-1.3-5.1-1.1c-2.5,0.4-4.8,1.6-7,2.8c-0.3-0.4-0.8-0.5-1.4-0.4c-0.4,0.1-0.7,0.3-0.9,0.5\r\n            c-0.4-0.2-1.7-0.7-4.9-0.7c-2,0-8.9,2.1-5.3,4.4c-1.5,0.4-3.2,0.8-4.4,0.9l0.1,0.9c0.7-0.1,1.5-0.2,2.4-0.4\r\n            c-2.5,1.5-4.7,3.4-6.6,5.6c-2,2.3-3.1,5.4-3.5,8.3c-0.5,3.6,0.5,7.2,0.3,10.8c-0.2,1.9-1.2,2.8-2.2,4.3c-1,1.5-1.4,3.2-2.4,4.7\r\n            c-0.8,1.4-2.1,2.4-3.2,3.6c-0.4,0.4-0.3,0.7,0,0.8c0.1,0,0.2,0,0.4,0c0.8-0.1,1.5-0.5,2.2-0.7c1.1-0.3,2.2-0.6,3.2-1\r\n            c0.7-0.3,3-1,5.4-1.9c0.1,0.9,0.2,1.9,0.4,2.5c0.4,1.2,2.3,3.4,2.3,3.4s1.8,1.6,1.9,3.7c0,1.1-0.3,2-0.7,2.6c-0.6-0.4-2.2-1-3.6,0.8\r\n            c-1.8,2.3-2.5,4.4-3.4,5.6c-0.9,1.2-3,3.6-3.2,4.7c-0.2,1.1,0.8,2.3,0.8,2.3l-5.7,10.3c0,0,2.5,2.9,8.6,3.3\r\n            c6.1,0.4,6.5-1.3,14.3,0.8c7.8,2.1,12.2,13.9,27.5,12c0,0-2-6.2-4.5-9.9c-2.5-3.7-5.4-7.8-5.4-7.8c0.2-1.1,1.4-4.6,0.6-5.4\r\n            c-0.5-0.5-1-0.9-1.5-1.4c0.4-0.9,0.9-1.8,0.9-2.8c0-0.9-0.4-2-0.1-2.9c0.2-0.6,0.8-1,1.4-1c0.8,0,1.3,0.7,2.1,0.9\r\n            c0.8,0.2,2.1,0.1,2.9,0.1c0.9,0,1.7,0.7,2.5,0.9c2.1,0.7,4.4,0.4,5.9-1.3c1.6-1.8,0.3-3.6,0.3-3.6s-1.2-1.5-1.2-2.4\r\n            c0-0.9,0.7-1.6,0.7-1.6l0-0.1c0.1,0,0.2,0,0.3,0c0.7,0,1.3-0.5,1.3-1c0-0.2,0-0.3-0.1-0.4c0.5,0.1,1.2,0.2,1.3,0.2\r\n            c0.8,0.2,1.5,0.4,2.2,0.8c1.4,0.8,2.3,2.2,2.7,3.7c0.1,0.5,0.7,2.2,0.3,2.6c-0.3,0.3-0.4,1.1-0.4,1.5c0,0.8,0.3,1.7,0.8,2.3\r\n            c0.1,0.2,0.6,0.5,0.7,0.7c1.2,5.1,1.6,11.1,8.3,11.6c2.8,0.2,4.4-1.3,4.4-1.3s1.8-1.1,2.4-4.1c0.6-3,0.7-6.5,0.7-6.5\r\n            S-818.7,558.5-823.5,558.3z\r\n            M-865.4,497.4c-0.4,0-0.7,0-1.1,0c0,0,0-0.1,0-0.1C-866.3,497.4-865.9,497.4-865.4,497.4z\r\n            M-872.9,497.9\r\n            c0.3-0.1,2.5-0.4,3.4-0.4c0,0.1,0,0.1,0,0.2c-0.3,0-0.7,0.1-1,0.1c-1.6,0.2-3.3,0.6-4.9,1.2C-874.6,498.5-873.8,498-872.9,497.9z\r\n            M-878.4,498.2c1.6-0.8,2.9-0.9,4.7-1.1c-1.4,0.1-3.1,2.5-4.6,2C-878.7,498.9-878.9,498.5-878.4,498.2z\r\n            M-862,497.6\r\n            c0.1,0,0.3,0,0.4,0l0,0C-861.7,497.6-861.9,497.6-862,497.6z\r\n            M-860.9,496.5c-0.8-0.1-2.2-0.5-3-0.2c1.3-0.4,2.5-0.9,3.8-1.2\r\n            c0.7-0.1,1.4-0.2,2.1-0.1c1,0.2,1.1,0.9,0.2,1.4c0,0-0.1,0-0.1,0C-858.8,496.9-859.9,496.6-860.9,496.5z\" />\r\n        </svg>\r\n      </g>\r\n    </g>\r\n  </svg>\r\n  <span>Sherlock</span>\r\n</div>\r\n<div id=\"sherlockChart\" />\r\n",
    "<script>\r\n  import { formatDate, trunc } from \"../modules/utils\";\r\n  export let variable = {};\r\n  let details = false;\r\n</script>\r\n\r\n<style>\r\n  table {\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n    font-size: 0.7rem;\r\n  }\r\n  td {\r\n    padding: 0.8em 0;\r\n    border-bottom: 1px solid #ddd;\r\n  }\r\n  tr:hover {\r\n    background-color: #f5f5f5;\r\n  }\r\n  th {\r\n    padding-top: 1rem;\r\n    text-align: left;\r\n    font-weight: 600;\r\n  }\r\n  thead {\r\n    position: sticky;\r\n    top: 0;\r\n    width: 100%;\r\n    background: white;\r\n  }\r\n  label {\r\n    font-size: 0.7rem;\r\n    cursor: pointer;\r\n  }\r\n  input {\r\n    position: absolute;\r\n    visibility: hidden;\r\n  }\r\n</style>\r\n\r\n<label for=\"showmore\">\r\n  <input type=\"checkbox\" id=\"showmore\" bind:checked={details} />\r\n  <u>Show {details ? 'less' : 'more'} data</u>\r\n</label>\r\n<table>\r\n  <thead>\r\n    <tr>\r\n      <th>Answer</th>\r\n\r\n      {#if details}\r\n        <th colspan=\"10\">other responses</th>\r\n      {:else}\r\n        <th>User</th>\r\n        <th>Date</th>\r\n      {/if}\r\n    </tr>\r\n  </thead>\r\n  {#each variable.results as result}\r\n    {#if result.value.trim().length}\r\n      <tr>\r\n        <td>{result.value}</td>\r\n        {#if details}\r\n          {#each result.taskResults.stepResults as step}\r\n            {#each step.stepItemResults as item}\r\n              {#if item.variableName !== variable.variableName}\r\n                <td>{item.value} ({trunc(item.variableName)})</td>\r\n              {/if}\r\n            {/each}\r\n          {/each}\r\n        {:else}\r\n          <td>{trunc(result.uid)}</td>\r\n          <td>{formatDate(result.date)}</td>\r\n        {/if}\r\n      </tr>\r\n    {/if}\r\n  {:else}No answers given yet{/each}\r\n</table>\r\n"
  ],
  "names": [],
  "mappings": "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"
}